Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.2.0'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\n\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ build.gradle	(date 1623528549310)
@@ -11,6 +11,10 @@
         // in the individual module build.gradle files
     }
 }
+plugins {
+    id "org.sonarqube" version "3.0"
+}
+
 
 allprojects {
     repositories {
Index: app/src/test/java/com/example/kakerlakenpoker/BuildGameUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker;\r\n\r\n\r\nimport com.example.game.card.GameDeck;\r\nimport com.example.game.BuildGame;\r\nimport com.example.game.Game;\r\nimport com.example.game.player.CollectedDeck;\r\nimport com.example.game.player.HandDeck;\r\nimport com.example.game.player.Player;\r\n\r\nimport org.junit.After;\r\nimport org.junit.Assert;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport org.junit.jupiter.api.Assertions;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class BuildGameUnitTest {\r\n    int one;\r\n    int two;\r\n    int three;\r\n    int four;\r\n    BuildGame buildGame;\r\n    ArrayList<Player> list;\r\n    GameDeck gameDeck;\r\n    @Before\r\n    public void setUp(){\r\n        one = \"one\";\r\n        two = \"two\";\r\n        three = \"three\";\r\n        four = \"four\";\r\n        buildGame = new BuildGame();\r\n        list = new ArrayList<>();\r\n        gameDeck = new GameDeck();\r\n    }\r\n\r\n    @After\r\n    public void tearDown() {\r\n        one = null;\r\n        two = null;\r\n        three = null;\r\n        four = null;\r\n        buildGame = null;\r\n        list = null;\r\n        gameDeck = null;\r\n    }\r\n    @Test\r\n    public void testAddServerPlayer(){\r\n        buildGame.addServerPlayer(one);\r\n<<<<<<< HEAD\r\n        Assert.assertEquals(\"one\",buildGame.getPlayers().get(0).getID());\r\n=======\r\n        Assert.assertEquals(\"one\",buildGame.getPlayers().get(0).getId());\r\n>>>>>>> reorderingFiles\r\n        buildGame.addServerPlayer(three);\r\n        buildGame.addServerPlayer(two);\r\n        buildGame.addServerPlayer(four);\r\n        Assert.assertEquals(4,buildGame.getPlayers().size());\r\n    }\r\n\r\n    @Test\r\n    public void testDistributeCards(){\r\n        buildGame.addServerPlayer(one);\r\n        buildGame.addServerPlayer(two);\r\n        buildGame.addServerPlayer(three);\r\n        buildGame.addServerPlayer(four);\r\n        buildGame.distributeCards();\r\n        for (int i = 0; i < buildGame.getPlayers().size(); i++) {\r\n            Assert.assertEquals(16,buildGame.getPlayers().get(i).getHandDeck().size());\r\n        }\r\n    }\r\n    @Test\r\n    public void testBuildGame(){\r\n        buildGame.addServerPlayer(one);\r\n        buildGame.addServerPlayer(two);\r\n        buildGame.addServerPlayer(three);\r\n        buildGame.addServerPlayer(four);\r\n        Game game = buildGame.buildGame();\r\n        Assert.assertEquals(4,game.getPlayers().size());\r\n    }\r\n\r\n    @Test\r\n    public void testBuildGameException(){\r\n        buildGame.addServerPlayer(one);\r\n        IllegalArgumentException message= Assertions.assertThrows(IllegalArgumentException.class, () -> buildGame.buildGame());\r\n        Assert.assertEquals(\"java.lang.IllegalArgumentException: Need more players\",message.toString());\r\n\r\n    }\r\n    @Test\r\n    public void testsetPlayer(){\r\n        list.add(new Player(\"testi\",new HandDeck(),new CollectedDeck()));\r\n        buildGame.setPlayers(list);\r\n        Assert.assertEquals(1,buildGame.getPlayers().size());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/example/kakerlakenpoker/BuildGameUnitTest.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/test/java/com/example/kakerlakenpoker/BuildGameUnitTest.java	(date 1623529225821)
@@ -26,10 +26,10 @@
     GameDeck gameDeck;
     @Before
     public void setUp(){
-        one = "one";
-        two = "two";
-        three = "three";
-        four = "four";
+        one = 1;
+        two = 2;
+        three = 3;
+        four = 4;
         buildGame = new BuildGame();
         list = new ArrayList<>();
         gameDeck = new GameDeck();
@@ -37,10 +37,6 @@
 
     @After
     public void tearDown() {
-        one = null;
-        two = null;
-        three = null;
-        four = null;
         buildGame = null;
         list = null;
         gameDeck = null;
@@ -48,11 +44,8 @@
     @Test
     public void testAddServerPlayer(){
         buildGame.addServerPlayer(one);
-<<<<<<< HEAD
-        Assert.assertEquals("one",buildGame.getPlayers().get(0).getID());
-=======
         Assert.assertEquals("one",buildGame.getPlayers().get(0).getId());
->>>>>>> reorderingFiles
+
         buildGame.addServerPlayer(three);
         buildGame.addServerPlayer(two);
         buildGame.addServerPlayer(four);
@@ -89,7 +82,7 @@
     }
     @Test
     public void testsetPlayer(){
-        list.add(new Player("testi",new HandDeck(),new CollectedDeck()));
+        list.add(new Player(1,new HandDeck(),new CollectedDeck()));
         buildGame.setPlayers(list);
         Assert.assertEquals(1,buildGame.getPlayers().size());
     }
Index: app/src/main/java/com/example/kakerlakenpoker/activities/TestClientServerConnection.java
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/TestClientServerConnection.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/TestClientServerConnection.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
@@ -1,150 +0,0 @@
-package com.example.kakerlakenpoker.activities;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.widget.Button;
-import android.widget.TextView;
-
-import androidx.appcompat.app.AppCompatActivity;
-
-import com.esotericsoftware.minlog.Log;
-import com.example.kakerlakenpoker.PlayerIngameMainActivity;
-import com.example.kakerlakenpoker.R;
-<<<<<<< HEAD
-import com.example.kakerlakenpoker.card.Card;
-import com.example.kakerlakenpoker.card.Type;
-import com.example.kakerlakenpoker.game.Decision;
-import com.example.kakerlakenpoker.game.Turn;
-import com.example.kakerlakenpoker.network.game.GameClient;
-import com.example.kakerlakenpoker.network.game.GameServer;
-import com.example.kakerlakenpoker.network.kryo.NetworkConstants;
-import com.example.kakerlakenpoker.player.Player;
-=======
-import com.example.game.card.Card;
-import com.example.game.card.Type;
-import com.example.game.Decision;
-import com.example.game.Turn;
-import com.example.server.network.game.GameData;
-
-import com.example.game.player.Player;
-import com.example.server.NetworkConstants;
-
->>>>>>> reorderingFiles
-
-import java.util.Collections;
-
-public class TestClientServerConnection extends AppCompatActivity {
-    private Button makeServer;
-    private Button makeClient;
-    private Button startGame;
-    private Button makeDecision;
-    private Button showGameView;
-    private TextView text;
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.testclientserver);
-
-        makeServer = findViewById(R.id.btnmakeServer);
-        makeClient = findViewById(R.id.btnmakeClient);
-        makeDecision = findViewById(R.id.btnmakeDecision);
-        showGameView = findViewById(R.id.showGameView);
-        text = findViewById(R.id.playeridTextView);
-        startGame = findViewById(R.id.starttest);
-
-        showGameView.setOnClickListener(v->showGameView());
-        makeClient.setOnClickListener(v->makeClient());
-<<<<<<< HEAD
-        makeServer.setOnClickListener(v->makeTurn());
-        makeDecision.setOnClickListener(v->makeDecision());
-
-        startGame.setOnClickListener(view -> {
-            Intent intent = new Intent(TestClientServerConnection.this, PlayerIngameMainActivity.class);
-            startActivity(intent);
-        });
-=======
-        /*makeServer.setOnClickListener(v->makeTurn());
-        makeDecision.setOnClickListener(v->makeDecision());*/
->>>>>>> reorderingFiles
-    }
-
-
-    public void makeClient() {
-        Thread thread = new Thread(){
-            @Override
-            public void run() {
-                GameClient.getInstance().init(NetworkConstants.MAIN_SERVER_IP);
-
-            }
-        };
-
-        thread.start();
-        try {
-            thread.join();
-        } catch (InterruptedException e) {
-            Thread.currentThread().interrupt();
-        }
-        text.setText(String.valueOf(GameClient.getInstance().getClient().getClient().getID()));
-    }
-
-    public void showGameView(){
-        Intent intent = new Intent(this, PlayerIngameMainActivity.class);
-        startActivity(intent);
-    }
-
-   /* public void makeTurn(){
-        Turn turn;
-        Player me=null;
-
-        Type selectedType = Type.KAKERLAKE;
-        Player enemy=null;
-
-        Collections.shuffle(GameClient.getInstance().getGame().getPlayers());
-
-        for(Player player: GameClient.getInstance().getGame().getPlayers()){
-            Log.info(String.valueOf(GameClient.getInstance().getClient().getClient().getID()));
-<<<<<<< HEAD
-            Log.info(player.getID());
-            if(player.getID().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID()))){
-                me = player;
-            }
-            if(!player.getID().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID())))enemy= player;
-=======
-            Log.info(player.getId());
-            if(player.getId().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID()))){
-                me = player;
-            }
-            if(!player.getId().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID())))enemy= player;
->>>>>>> reorderingFiles
-        }
-
-        assert me != null;
-        Card selectedCard = me.getHandDeck().getDeck().get(0);
-
-
-        turn = new Turn(selectedCard, selectedType,enemy);
-        GameClient.getInstance().getGame().makeTurn(me,turn);
-
-    }
-
-    public void makeDecision(){
-        Collections.shuffle(GameClient.getInstance().getGame().getPlayers());
-        Player me=null;
-        for(Player player: GameClient.getInstance().getGame().getPlayers()){
-            Log.info(String.valueOf(GameClient.getInstance().getClient().getClient().getID()));
-<<<<<<< HEAD
-            Log.info(player.getID());
-            if(player.getID().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID()))){
-=======
-            Log.info(player.getId());
-            if(player.getId().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID()))){
->>>>>>> reorderingFiles
-                me = player;
-            }
-
-        }
-        GameClient.getInstance().getGame().makeDecision(me, Decision.TRUTH);
-    }*/
-
-
-}
Index: app/src/main/res/layout-land/testclientserver.xml
===================================================================
--- app/src/main/res/layout-land/testclientserver.xml	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/res/layout-land/testclientserver.xml	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <Button
-        android:id="@+id/btnmakeServer"
-        android:layout_width="185dp"
-        android:layout_height="71dp"
-        android:layout_marginStart="96dp"
-        android:layout_marginLeft="96dp"
-        android:text="makeTurn"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-
-    <Button
-        android:id="@+id/btnmakeClient"
-        android:layout_width="185dp"
-        android:layout_height="71dp"
-        android:text="createClient"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.534"
-        app:layout_constraintStart_toEndOf="@+id/btnmakeServer"
-        app:layout_constraintTop_toTopOf="parent" />
-
-    <Button
-        android:id="@+id/btnmakeDecision"
-        android:layout_width="185dp"
-        android:layout_height="71dp"
-        android:text="makedecision"
-        app:layout_constraintBottom_toTopOf="@+id/btnmakeServer"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.788"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.63" />
-
-    <TextView
-        android:id="@+id/playeridTextView"
-        android:layout_width="93dp"
-        android:layout_height="49dp"
-        android:layout_marginStart="30dp"
-        android:layout_marginLeft="30dp"
-        android:layout_marginTop="92dp"
-        android:textSize="25sp"
-        android:textColor="@color/btn_color_white"
-        android:text=""
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toStartOf="@+id/btnmakeClient"
-        app:layout_constraintStart_toEndOf="@+id/btnmakeServer"
-        app:layout_constraintTop_toBottomOf="@+id/btnmakeDecision" />
-
-    <Button
-<<<<<<< HEAD
-        android:id="@+id/starttest"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Start"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toStartOf="@+id/playeridTextView"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/btnmakeServer" />
-=======
-        android:id="@+id/showGameView"
-        android:layout_width="185dp"
-        android:layout_height="71dp"
-        android:layout_marginStart="68dp"
-        android:layout_marginLeft="68dp"
-        android:text="showGameView"
-        app:layout_constraintBottom_toTopOf="@+id/btnmakeServer"
-        app:layout_constraintEnd_toStartOf="@+id/btnmakeDecision"
-        app:layout_constraintHorizontal_bias="0.154"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.56" />
->>>>>>> reorderingFiles
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kakerlakenpoker/activities/GameClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\n\r\nimport android.app.Activity;\r\n\r\nimport com.esotericsoftware.minlog.Log;\r\n\r\nimport com.example.game.Game;\r\nimport com.example.server.network.dto.PlayerReady;\r\nimport com.example.server.RegisterClasses;\r\nimport com.example.server.dto.clienttomainserver.ClientName;\r\nimport com.example.server.dto.clienttomainserver.ExitLobby;\r\nimport com.example.server.dto.Lobby;\r\nimport com.example.server.network.kryo.NetworkClientKryo;\r\nimport com.example.server.network.kryo.RegisterHelper;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\n\r\npublic class GameClient {\r\n    private static GameClient instance;\r\n    private NetworkClientKryo client;\r\n    private ArrayList<Lobby> openLobbies = new ArrayList<>();\r\n    private Lobby currentLobby;\r\n    private Activity activity;\r\n    private IpListAdapter listAdapter;\r\n    private String userName;\r\n    private Game game;\r\n\r\n    private GameClient(){\r\n    }\r\n\r\n    public static GameClient getInstance(){\r\n        if (instance == null){\r\n            instance = new GameClient();\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public void init(String ipToConnect) {\r\n        try {\r\n            client = new NetworkClientKryo();\r\n            RegisterHelper.registerClasses(client.getClient().getKryo());\r\n            client.getClient().addListener(new ClientListener(this));\r\n            client.connect(ipToConnect);\r\n           client.getClient().sendTCP(new ClientName(userName));\r\n\r\n        }catch(IOException e){\r\n            Log.info(e.getMessage());\r\n            Log.info(\"Could not connect to host \" + ipToConnect);\r\n        }\r\n    }\r\n\r\n    public void connect(String ip){\r\n        try {\r\n            client.connect(ip);\r\n        } catch (IOException e) {\r\n            Log.info(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public NetworkClientKryo getClient(){\r\n        return client;\r\n    }\r\n\r\n    public ArrayList<Lobby> getOpenLobbies() {\r\n        return openLobbies;\r\n    }\r\n\r\n    public void setListAdapter(IpListAdapter listAdapter) {\r\n        this.listAdapter = listAdapter;\r\n    }\r\n\r\n    public void setCurrentLobby(Lobby lobby){\r\n            currentLobby = lobby;\r\n        }\r\n\r\n    public void setOpenLobbies(ArrayList<Lobby> openLobbies) {\r\n        this.openLobbies = openLobbies;\r\n    }\r\n\r\n    public Game getGame() {\r\n        return game;\r\n    }\r\n\r\n    public void setGame(Game game){\r\n        this.game = game;\r\n    }\r\n\r\n\r\n    public Lobby getCurrentLobby(){\r\n        return currentLobby;\r\n    }\r\n\r\n    public IpListAdapter getListAdapter() {\r\n        return listAdapter;\r\n    }\r\n\r\n    public void exitLobby(){\r\n        this.getClient().sendMessage(new ExitLobby(currentLobby.getName()));\r\n    }\r\n\r\n    public void setUserName(String userName){\r\n        this.userName = userName;\r\n    }\r\n\r\n    public Activity getActivity() {\r\n        return activity;\r\n    }\r\n\r\n    public void setActivity(Activity activity) {\r\n        this.activity = activity;\r\n    }\r\n\r\n    public void connectToNewServer(String ip, ClientListener listener){\r\n        client.getClient().removeListener(listener);\r\n        this.init(ip);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/GameClient.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/GameClient.java	(date 1623528549285)
@@ -25,6 +25,7 @@
     private Lobby currentLobby;
     private Activity activity;
     private IpListAdapter listAdapter;
+    private LobbyAdapter lobbyAdapter;
     private String userName;
     private Game game;
 
@@ -73,11 +74,15 @@
     }
 
     public void setCurrentLobby(Lobby lobby){
-            currentLobby = lobby;
+
+        currentLobby = lobby;
         }
 
     public void setOpenLobbies(ArrayList<Lobby> openLobbies) {
         this.openLobbies = openLobbies;
+        Log.info("That the size of the lobbies: "+openLobbies.size());
+        if(lobbyAdapter!=null)
+        this.lobbyAdapter.notifyAdapter();
     }
 
     public Game getGame() {
@@ -113,6 +118,10 @@
         this.activity = activity;
     }
 
+    public void setLobbyAdapter(LobbyAdapter lobbyAdapter) {
+        this.lobbyAdapter = lobbyAdapter;
+    }
+
     public void connectToNewServer(String ip, ClientListener listener){
         client.getClient().removeListener(listener);
         this.init(ip);
Index: app/src/main/java/com/example/kakerlakenpoker/activities/PlayerIngameMainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Dialog;\r\nimport android.content.ClipData;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.DragEvent;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.lifecycle.MutableLiveData;\r\n\r\n<<<<<<< HEAD:app/src/main/java/com/example/kakerlakenpoker/PlayerIngameMainActivity.java\r\nimport com.esotericsoftware.minlog.Log;\r\nimport com.example.kakerlakenpoker.card.Card;\r\nimport com.example.kakerlakenpoker.card.Type;\r\nimport com.example.kakerlakenpoker.game.Decision;\r\nimport com.example.kakerlakenpoker.game.Game;\r\nimport com.example.kakerlakenpoker.game.GameState;\r\nimport com.example.kakerlakenpoker.game.Turn;\r\nimport com.example.kakerlakenpoker.network.game.GameClient;\r\nimport com.example.kakerlakenpoker.player.Player;\r\n=======\r\nimport com.example.kakerlakenpoker.R;\r\nimport com.example.game.Game;\r\nimport com.example.game.player.Player;\r\n>>>>>>> reorderingFiles:app/src/main/java/com/example/kakerlakenpoker/activities/PlayerIngameMainActivity.java\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class PlayerIngameMainActivity extends AppCompatActivity {\r\n\r\n\r\n    LinearLayout dragViewKakerlake;\r\n    LinearLayout dragViewBat;\r\n    LinearLayout dragViewFly;\r\n    LinearLayout dragViewFrog;\r\n    LinearLayout dragViewRat;\r\n    LinearLayout dragViewScorpion;\r\n    LinearLayout dragViewSpider;\r\n    LinearLayout dragViewStink;\r\n\r\n    LinearLayout dropViewPlayer1;\r\n    LinearLayout popUp;\r\n    LinearLayout messageview;\r\n\r\n    Button sendChallange;\r\n    Button goBack;\r\n    EditText writeCardText;\r\n    Spinner choosePlayer;\r\n\r\n    //TextViews für die ausgabe der vorläufigen zahlen oder Nachrichten\r\n    TextView messageText;\r\n\r\n    TextView krötenView;\r\n    TextView spinnenView;\r\n    TextView fliegenView;\r\n    TextView scorpionView;\r\n    TextView kakerlakeView;\r\n    TextView ratteView;\r\n    TextView stinkwanzeView;\r\n    TextView fledermausView;\r\n\r\n\r\n    private String playedcard;\r\n    private String guessText;\r\n\r\n\r\n    List<String> namesOfPlayer = new ArrayList<String>();\r\n    Boolean check;\r\n    MutableLiveData<GameState> stateListen = new MutableLiveData<GameState>();\r\n    Player me = null;\r\n\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.player_ingameview);\r\n\r\n        me = getLocalPlayer();\r\n        me.getHandDeck().countAllCards();\r\n\r\n        messageText = (TextView) findViewById(R.id.messageText);\r\n\r\n        krötenView = (TextView) findViewById(R.id.krotenView);\r\n        spinnenView = findViewById(R.id.spinnenVIew);\r\n        fliegenView = findViewById(R.id.fliegeView);\r\n        scorpionView = findViewById(R.id.skorpionView);\r\n        kakerlakeView = findViewById(R.id.kakerlakenView);\r\n        ratteView = findViewById(R.id.rattenView);\r\n        fledermausView = findViewById(R.id.fledermausView);\r\n        stinkwanzeView = findViewById(R.id.stinkwanzeView);\r\n\r\n        displayCardAmounts();\r\n        checkTurn();\r\n\r\n\r\n        //init des popUp Fensters\r\n        messageview = (LinearLayout) findViewById(R.id.notificationView);\r\n        popUp = (LinearLayout)  findViewById(R.id.popupview);\r\n        messageview.setVisibility(View.INVISIBLE);\r\n        popUp.setVisibility(View.INVISIBLE);\r\n\r\n        //init der Buttons und Edit Text\r\n        sendChallange = (Button) findViewById(R.id.sendButton);\r\n        goBack = (Button) findViewById(R.id.exitButton);\r\n        writeCardText = (EditText) findViewById(R.id.guessText);\r\n\r\n        //init der KartenLayouts, Spinner(Wahl des Spielers) und der PlayerViews\r\n        dragViewKakerlake = (LinearLayout) findViewById(R.id.dragViewKakerlake);\r\n        dragViewBat = (LinearLayout) findViewById(R.id.dragViewBat);\r\n        dragViewFly = (LinearLayout) findViewById(R.id.dragViewFly);\r\n        dragViewFrog = (LinearLayout) findViewById(R.id.dragViewFrog);\r\n        dragViewRat = (LinearLayout) findViewById(R.id.dragViewRat);\r\n        dragViewScorpion = (LinearLayout) findViewById(R.id.dragViewScorpion);\r\n        dragViewSpider = (LinearLayout) findViewById(R.id.dragViewSpider);\r\n        dragViewStink = (LinearLayout) findViewById(R.id.dragViewStink);\r\n\r\n        dropViewPlayer1 = (LinearLayout) findViewById(R.id.Player1);\r\n        choosePlayer = (Spinner) findViewById(R.id.spinnerPlayer);\r\n\r\n        setUpSpinner();\r\n\r\n        //Hier wird die View touchable\r\n        dragViewKakerlake.setOnTouchListener(new TouchListener());\r\n        dragViewBat.setOnTouchListener(new TouchListener());\r\n        dragViewFly.setOnTouchListener(new TouchListener());\r\n        dragViewFrog.setOnTouchListener(new TouchListener());\r\n        dragViewRat.setOnTouchListener(new TouchListener());\r\n        dragViewScorpion.setOnTouchListener(new TouchListener());\r\n        dragViewSpider.setOnTouchListener(new TouchListener());\r\n        dragViewStink.setOnTouchListener(new TouchListener());\r\n\r\n        //Hier wird die Fläche, wo ein Object hineingezogen wird, aktiviert!\r\n        dropViewPlayer1.setOnDragListener(new DragListener());\r\n\r\n        //Buttons werden mit funktionen belegt. Back- PopUp Fenster wird geschlossen\r\n        goBack.setOnClickListener((View view)-> setInvisible(popUp));\r\n        sendChallange.setOnClickListener((View view)-> sendChallengeInputs());\r\n\r\n\r\n        //Observer, der bei Änderung des GameState die Activity neu ladet\r\n        stateListen.setValue(GameClient.getInstance().getGame().getCurrentState());\r\n        stateListen.observe(this, Observer -> {\r\n            displayCardAmounts();\r\n            checkTurn();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    class DragListener implements View.OnDragListener{\r\n\r\n        @Override\r\n        public boolean onDrag(View v, DragEvent dragEvent) {\r\n            switch (dragEvent.getAction()) {\r\n\r\n                case DragEvent.ACTION_DRAG_STARTED:{\r\n                    View view = (View) dragEvent.getLocalState();\r\n                    playedcard = String.valueOf(view.getTag());\r\n                    break;}\r\n\r\n                case DragEvent.ACTION_DRAG_ENTERED:{\r\n                    break;}\r\n\r\n                case DragEvent.ACTION_DRAG_LOCATION:{\r\n\r\n                    break;}\r\n\r\n                case DragEvent.ACTION_DRAG_EXITED:{\r\n                    break;}\r\n\r\n                case DragEvent.ACTION_DRAG_ENDED:\r\n\r\n\r\n                case DragEvent.ACTION_DROP:{\r\n                    dropCorrect(dragEvent);\r\n                    return (true);}\r\n\r\n                default:{\r\n                    break;}\r\n            }\r\n            return true;\r\n        }\r\n\r\n        }\r\n\r\n    class TouchListener implements View.OnTouchListener{\r\n        @Override\r\n        public boolean onTouch(View view, MotionEvent event) {\r\n            if (event.getAction() == MotionEvent.ACTION_DOWN) {\r\n                ClipData data = ClipData.newPlainText(\"\", \"\");\r\n                View.DragShadowBuilder dragShadow = new View.DragShadowBuilder(view);\r\n                view.startDrag(data, dragShadow, view, 0);\r\n\r\n                return true;\r\n            }else {return false;}\r\n        }\r\n    }\r\n\r\n    public void dropCorrect(DragEvent de){\r\n\r\n        if(de.getResult() == true){\r\n            popUp.setVisibility(View.VISIBLE);\r\n        }\r\n        else{ popUp.setVisibility(View.INVISIBLE);}\r\n    }\r\n\r\n    public void setInvisible(LinearLayout linlayout){\r\n        linlayout.setVisibility(View.INVISIBLE);\r\n    }\r\n\r\n    public void setTextforResult(String result){\r\n        messageText.setText(result);\r\n        messageview.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    //hollt sich alle Namen der anderen Spieler und fügt die Namen in den Spinner!\r\n    public void setUpSpinner(){\r\n        for (Player player : GameClient.getInstance().getGame().getPlayers()){\r\n            if(!namesOfPlayer.contains(player.getName()) || !player.getID().equals(me.getID())){\r\n                namesOfPlayer.add(player.getID());\r\n            }\r\n\r\n        }\r\n        ArrayAdapter chooser = new ArrayAdapter(PlayerIngameMainActivity.this, android.R.layout.simple_spinner_dropdown_item, namesOfPlayer);\r\n        choosePlayer.setAdapter(chooser);\r\n    }\r\n    /*\r\n    Hier wird ein Spielzug (TURN) gemacht\r\n     */\r\n    public void sendChallengeInputs(){\r\n        checkEditTextInput();\r\n        if(check){\r\n            Turn turn;\r\n            Type selectedType = Type.valueOf(guessText);\r\n            Player enemy = null;\r\n            for(Player player: GameClient.getInstance().getGame().getPlayers()){\r\n                if(player.getID().equals(choosePlayer.getSelectedItem().toString()))\r\n                    enemy = player;\r\n            }\r\n            Card selectedCard = me.getHandDeck().findCard(playedcard);\r\n            turn = new Turn(selectedCard, selectedType,enemy);\r\n            GameClient.getInstance().getGame().makeTurn(me,turn);\r\n        this.popUp.setVisibility(View.INVISIBLE);\r\n        }\r\n    }\r\n    /*\r\n    Refresh the current view (doesent work!)\r\n     */\r\n    public void refreshView(){\r\n        Intent intent = getIntent();\r\n        finish();\r\n        startActivity(intent);\r\n    }\r\n\r\n    //Methode, die eine Decision (Truth/Lie) ausführt\r\n    public void decission(Decision decision){\r\n        GameClient.getInstance().getGame().makeDecision(me,decision);\r\n    }\r\n\r\n\r\n    public void checkEditTextInput(){\r\n\r\n        check = false;\r\n        String input = writeCardText.getText().toString().toUpperCase();\r\n\r\n        switch (input) {\r\n            case \"FLEDERMAUS\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            case \"FLIEGE\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            case \"RATTE\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            case \"SCORPION\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            case \"KAKERLAKE\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            case \"KROETE\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            case \"SPINNE\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            case \"STINKWANZE\":\r\n                guessText = input;\r\n                check = true;\r\n                break;\r\n            default: writeCardText.setError(\"Falscher Type von Karte! Bitte gib eine richtige ein!\"); break;\r\n        }\r\n\r\n    }\r\n    //Gibt das Player Object des spielenden Client zurück\r\n    public Player getLocalPlayer() {\r\n        for (Player p : GameClient.getInstance().getGame().getPlayers()) {\r\n            if (p.getID().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID()))) {\r\n                return p;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n    Öffnet einen Dialog, wenn man eine Decision machen muss\r\n     */\r\n    public void showDialogeChallenge(){\r\n        Dialog dia = new Dialog(this);\r\n        dia.setContentView(R.layout.decision_dialoge);\r\n        dia.setCanceledOnTouchOutside(false);\r\n        TextView text = dia.findViewById(R.id.info);\r\n        Button buttonTruth = dia.findViewById(R.id.truth);\r\n        Button buttonLie = dia.findViewById(R.id.lie);\r\n        dia.show();\r\n        buttonTruth.setOnClickListener(view -> {\r\n            decission(Decision.TRUTH);\r\n            dia.dismiss();\r\n        });\r\n\r\n        buttonLie.setOnClickListener(view -> {\r\n            decission(Decision.LIE);\r\n            dia.dismiss();\r\n        });\r\n\r\n        text.setText(\"Player: \" + GameClient.getInstance().getGame().getCurrentPlayer().getName() + \" played: \" + GameClient.getInstance().getGame().getTurn().getSelectedType().toString());\r\n\r\n    }\r\n\r\n    /*\r\n    Wird geöffnet, wenn man nicht an der Reihe ist\r\n     */\r\n    public void showDialogeWait(){\r\n        Dialog dia = new Dialog(this);\r\n        dia.setContentView(R.layout.waiting_dialoge);\r\n        dia.setCanceledOnTouchOutside(false);\r\n        TextView text = dia.findViewById(R.id.notYoutTurn);\r\n        text.setText(\"Player: \" + GameClient.getInstance().getGame().getCurrentPlayer().getName() + \" turn!\");\r\n        dia.show();\r\n\r\n    }\r\n        //möchte man den Stand verändern (Display), ruft man diese Klasse auf.\r\n        public void updateTheCollectedCards () {\r\n            krötenView.setText(me.getCollectedDeck().getKroete());\r\n            spinnenView.setText(me.getCollectedDeck().getSpinne());\r\n            fliegenView.setText(me.getCollectedDeck().getFliege());\r\n            scorpionView.setText(me.getCollectedDeck().getScorpion());\r\n            kakerlakeView.setText(me.getCollectedDeck().getKakerlake());\r\n            ratteView.setText(me.getCollectedDeck().getRatte());\r\n            stinkwanzeView.setText(me.getCollectedDeck().getStinkwanze());\r\n            fledermausView.setText(me.getCollectedDeck().getFledermaus());\r\n        }\r\n\r\n        //zeigt die gesammelten Karten der Gegner\r\n        public void showEnemyCollectCards(){\r\n        String output = \"\";\r\n\r\n        for(Player all : GameClient.getInstance().getGame().getPlayers()){\r\n\r\n            //hier soll die ausgaben meiner karten verhindert werden.\r\n            if(all == me){\r\n            }\r\n            else{ output += all.getCollectedDeck().toString() + (\"\\n\");}\r\n        }\r\n        messageText.setText(output);\r\n        messageview.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        public void displayCardAmounts(){\r\n            krötenView.setText(me.getHandDeck().getKroete());\r\n            spinnenView.setText(me.getHandDeck().getSpinne());\r\n            fliegenView.setText(me.getHandDeck().getFliege());\r\n            scorpionView.setText(me.getHandDeck().getScorpion());\r\n            kakerlakeView.setText(me.getHandDeck().getKakerlake());\r\n            ratteView.setText(me.getHandDeck().getRatte());\r\n            fledermausView.setText(me.getHandDeck().getFledermaus());\r\n            stinkwanzeView.setText(me.getHandDeck().getStinkwanze());\r\n        }\r\n\r\n        public void checkTurn(){\r\n            //me ist nicht aktuell am Spiel beteiligt\r\n            if(!me.getID().equals(GameClient.getInstance().getGame().getCurrentPlayer().getID()) || !me.getID().equals(GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getID())){\r\n                Log.debug(\"Not your turn!\");\r\n                Log.debug(\"Current Player: \" + GameClient.getInstance().getGame().getCurrentPlayer().getName());\r\n                Log.debug(\"Current Enems: \" + GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getName());\r\n                showDialogeWait();\r\n            }\r\n\r\n            //Turn wurde ausgeführt und me wurde als Enemy ausgewählt\r\n            if(GameClient.getInstance().getGame().getCurrentState() == GameState.AWAITING_DECISION && !GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getID().equals(me.getID())){\r\n                Log.debug(\"Current Player: \" + GameClient.getInstance().getGame().getCurrentPlayer().getName());\r\n                Log.debug(\"Current Enems: \" + GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getName());\r\n                Log.debug(\"You have to make a decission!\");\r\n                showDialogeChallenge();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/PlayerIngameMainActivity.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/PlayerIngameMainActivity.java	(date 1623529225821)
@@ -1,44 +1,50 @@
 package com.example.kakerlakenpoker.activities;
 
 import android.annotation.SuppressLint;
+import android.app.AlertDialog;
 import android.app.Dialog;
 import android.content.ClipData;
 import android.content.Intent;
+import android.hardware.Sensor;
+import android.hardware.SensorEvent;
+import android.hardware.SensorEventListener;
+import android.hardware.SensorManager;
 import android.os.Bundle;
 import android.view.DragEvent;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
+import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.LinearLayout;
 import android.widget.Spinner;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.lifecycle.MutableLiveData;
 
-<<<<<<< HEAD:app/src/main/java/com/example/kakerlakenpoker/PlayerIngameMainActivity.java
 import com.esotericsoftware.minlog.Log;
-import com.example.kakerlakenpoker.card.Card;
-import com.example.kakerlakenpoker.card.Type;
-import com.example.kakerlakenpoker.game.Decision;
-import com.example.kakerlakenpoker.game.Game;
-import com.example.kakerlakenpoker.game.GameState;
-import com.example.kakerlakenpoker.game.Turn;
-import com.example.kakerlakenpoker.network.game.GameClient;
-import com.example.kakerlakenpoker.player.Player;
-=======
+import com.example.game.Decision;
+import com.example.game.GameState;
+import com.example.game.Turn;
+import com.example.game.card.Card;
+import com.example.game.card.Type;
+import com.example.game.listener.StateListener;
+import com.example.game.player.CollectedDeck;
+import com.example.game.player.PlayerState;
 import com.example.kakerlakenpoker.R;
-import com.example.game.Game;
 import com.example.game.player.Player;
->>>>>>> reorderingFiles:app/src/main/java/com/example/kakerlakenpoker/activities/PlayerIngameMainActivity.java
+import com.example.server.network.dto.clienttogameserver.HandOver;
 
+import java.text.CollationElementIterator;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
-public class PlayerIngameMainActivity extends AppCompatActivity {
+public class PlayerIngameMainActivity extends AppCompatActivity implements SensorEventListener{
 
 
     LinearLayout dragViewKakerlake;
@@ -58,7 +64,8 @@
     Button goBack;
     EditText writeCardText;
     Spinner choosePlayer;
-
+    Spinner types;
+    ArrayList<Type> typeList;
     //TextViews für die ausgabe der vorläufigen zahlen oder Nachrichten
     TextView messageText;
 
@@ -74,41 +81,57 @@
 
     private String playedcard;
     private String guessText;
-
+    Dialog diaWait;
+    Dialog diaDecision;
+    private AlertDialog alertDialog;
+    private TextView waitingDialogTextView;
 
     List<String> namesOfPlayer = new ArrayList<String>();
     Boolean check;
     MutableLiveData<GameState> stateListen = new MutableLiveData<GameState>();
     Player me = null;
 
+    //Werte für den Handy-Shake
+    private CheckBox cheatbox;
+    private Sensor accelerometer;
+    private SensorManager ShakeSensorManager;
+    private float wert1;
+    private float wert2;
+    private float wert3;
+    Boolean erlaubnis = false;
+
 
     @SuppressLint("ClickableViewAccessibility")
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.player_ingameview);
-
+        diaDecision = new Dialog(this);
+        diaWait = new Dialog(this);
         me = getLocalPlayer();
         me.getHandDeck().countAllCards();
 
+
         messageText = (TextView) findViewById(R.id.messageText);
 
-        krötenView = (TextView) findViewById(R.id.krotenView);
-        spinnenView = findViewById(R.id.spinnenVIew);
-        fliegenView = findViewById(R.id.fliegeView);
-        scorpionView = findViewById(R.id.skorpionView);
-        kakerlakeView = findViewById(R.id.kakerlakenView);
-        ratteView = findViewById(R.id.rattenView);
-        fledermausView = findViewById(R.id.fledermausView);
-        stinkwanzeView = findViewById(R.id.stinkwanzeView);
+        krötenView = (TextView) findViewById(R.id.kakerlakenView);
+        spinnenView = findViewById(R.id.fliegeView);
+        fliegenView = findViewById(R.id.rattenView);
+        scorpionView = findViewById(R.id.stinkwanzeView);
+        kakerlakeView = findViewById(R.id.fledermausView);
+        ratteView = findViewById(R.id.spinnenVIew);
+        fledermausView = findViewById(R.id.skorpionView);
+        stinkwanzeView = findViewById(R.id.krotenView);
 
         displayCardAmounts();
+        initializeDialogs();
         checkTurn();
 
 
+
         //init des popUp Fensters
         messageview = (LinearLayout) findViewById(R.id.notificationView);
-        popUp = (LinearLayout)  findViewById(R.id.popupview);
+        popUp = (LinearLayout) findViewById(R.id.popupview);
         messageview.setVisibility(View.INVISIBLE);
         popUp.setVisibility(View.INVISIBLE);
 
@@ -146,57 +169,84 @@
         dropViewPlayer1.setOnDragListener(new DragListener());
 
         //Buttons werden mit funktionen belegt. Back- PopUp Fenster wird geschlossen
-        goBack.setOnClickListener((View view)-> setInvisible(popUp));
-        sendChallange.setOnClickListener((View view)-> sendChallengeInputs());
+        goBack.setOnClickListener((View view) -> setInvisible(popUp));
+        sendChallange.setOnClickListener((View view) -> sendChallengeInputs());
 
+        GameClient.getInstance().getGame().setStateListener(new StateListenerImpl());
+
+        //Init SensorManger
+        ShakeSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
 
         //Observer, der bei Änderung des GameState die Activity neu ladet
         stateListen.setValue(GameClient.getInstance().getGame().getCurrentState());
         stateListen.observe(this, Observer -> {
-            displayCardAmounts();
-            checkTurn();
+
+        });
+
+        //Handling und init für den Cheat
+        cheatbox = (CheckBox) findViewById(R.id.checkBox);
+        ShakeSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
+        accelerometer = ShakeSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
+
+        cheatbox.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Toast.makeText(getApplicationContext(), "Bitte Handy schütteln!!!", Toast.LENGTH_SHORT).show();
+                erlaubnis = true;
+            }
         });
 
+
+    }
+
+    @Override
+    public void onPointerCaptureChanged(boolean hasCapture) {
 
     }
 
-    class DragListener implements View.OnDragListener{
+    class DragListener implements View.OnDragListener {
 
         @Override
         public boolean onDrag(View v, DragEvent dragEvent) {
             switch (dragEvent.getAction()) {
 
-                case DragEvent.ACTION_DRAG_STARTED:{
+                case DragEvent.ACTION_DRAG_STARTED: {
                     View view = (View) dragEvent.getLocalState();
                     playedcard = String.valueOf(view.getTag());
-                    break;}
+                    break;
+                }
 
-                case DragEvent.ACTION_DRAG_ENTERED:{
-                    break;}
+                case DragEvent.ACTION_DRAG_ENTERED: {
+                    break;
+                }
 
-                case DragEvent.ACTION_DRAG_LOCATION:{
+                case DragEvent.ACTION_DRAG_LOCATION: {
 
-                    break;}
+                    break;
+                }
 
-                case DragEvent.ACTION_DRAG_EXITED:{
-                    break;}
+                case DragEvent.ACTION_DRAG_EXITED: {
+                    break;
+                }
 
                 case DragEvent.ACTION_DRAG_ENDED:
 
 
-                case DragEvent.ACTION_DROP:{
+                case DragEvent.ACTION_DROP: {
                     dropCorrect(dragEvent);
-                    return (true);}
+                    return (true);
+                }
 
-                default:{
-                    break;}
+                default: {
+                    break;
+                }
             }
             return true;
         }
 
-        }
+    }
 
-    class TouchListener implements View.OnTouchListener{
+    class TouchListener implements View.OnTouchListener {
         @Override
         public boolean onTouch(View view, MotionEvent event) {
             if (event.getAction() == MotionEvent.ACTION_DOWN) {
@@ -205,73 +255,83 @@
                 view.startDrag(data, dragShadow, view, 0);
 
                 return true;
-            }else {return false;}
+            } else {
+                return false;
+            }
         }
     }
 
-    public void dropCorrect(DragEvent de){
+    public void dropCorrect(DragEvent de) {
 
-        if(de.getResult() == true){
+        if (de.getResult() == true) {
             popUp.setVisibility(View.VISIBLE);
+        } else {
+            popUp.setVisibility(View.INVISIBLE);
         }
-        else{ popUp.setVisibility(View.INVISIBLE);}
     }
 
-    public void setInvisible(LinearLayout linlayout){
+    public void setInvisible(LinearLayout linlayout) {
         linlayout.setVisibility(View.INVISIBLE);
     }
 
-    public void setTextforResult(String result){
+    public void setTextforResult(String result) {
         messageText.setText(result);
         messageview.setVisibility(View.VISIBLE);
     }
 
     //hollt sich alle Namen der anderen Spieler und fügt die Namen in den Spinner!
-    public void setUpSpinner(){
-        for (Player player : GameClient.getInstance().getGame().getPlayers()){
-            if(!namesOfPlayer.contains(player.getName()) || !player.getID().equals(me.getID())){
-                namesOfPlayer.add(player.getID());
+    public void setUpSpinner() {
+        for (Player player : GameClient.getInstance().getGame().getPlayers()) {
+            if (!(player.getId() == me.getId())) {
+                namesOfPlayer.add(String.valueOf(player.getId()));
             }
 
         }
         ArrayAdapter chooser = new ArrayAdapter(PlayerIngameMainActivity.this, android.R.layout.simple_spinner_dropdown_item, namesOfPlayer);
         choosePlayer.setAdapter(chooser);
     }
+
     /*
     Hier wird ein Spielzug (TURN) gemacht
      */
-    public void sendChallengeInputs(){
+    public void sendChallengeInputs() {
         checkEditTextInput();
-        if(check){
+        if (check) {
             Turn turn;
             Type selectedType = Type.valueOf(guessText);
             Player enemy = null;
-            for(Player player: GameClient.getInstance().getGame().getPlayers()){
-                if(player.getID().equals(choosePlayer.getSelectedItem().toString()))
+            for (Player player : GameClient.getInstance().getGame().getPlayers()) {
+                if (player.getId() == Integer.parseInt(choosePlayer.getSelectedItem().toString()))
                     enemy = player;
             }
+            assert enemy != null;
+            Log.info("This is the selected enemy: " + enemy.getId());
+
             Card selectedCard = me.getHandDeck().findCard(playedcard);
-            turn = new Turn(selectedCard, selectedType,enemy);
-            GameClient.getInstance().getGame().makeTurn(me,turn);
-        this.popUp.setVisibility(View.INVISIBLE);
+            Log.info("selected things", selectedType + " " + selectedCard + " " + enemy.getId());
+            turn = new Turn(selectedCard, selectedType, enemy);
+            GameClient.getInstance().getGame().getCurrentPlayer().getHandDeck().removeCard(selectedCard);
+            GameClient.getInstance().getGame().makeTurn(me, turn);
+            this.popUp.setVisibility(View.INVISIBLE);
         }
     }
+
     /*
     Refresh the current view (doesent work!)
      */
-    public void refreshView(){
+    public void refreshView() {
         Intent intent = getIntent();
         finish();
         startActivity(intent);
     }
 
     //Methode, die eine Decision (Truth/Lie) ausführt
-    public void decission(Decision decision){
-        GameClient.getInstance().getGame().makeDecision(me,decision);
+    public void decission(Decision decision) {
+        GameClient.getInstance().getGame().makeDecision(me, decision);
     }
 
 
-    public void checkEditTextInput(){
+    public void checkEditTextInput() {
 
         check = false;
         String input = writeCardText.getText().toString().toUpperCase();
@@ -309,14 +369,19 @@
                 guessText = input;
                 check = true;
                 break;
-            default: writeCardText.setError("Falscher Type von Karte! Bitte gib eine richtige ein!"); break;
+            default:
+                writeCardText.setError("Falscher Type von Karte! Bitte gib eine richtige ein!");
+                break;
         }
 
     }
+
     //Gibt das Player Object des spielenden Client zurück
     public Player getLocalPlayer() {
         for (Player p : GameClient.getInstance().getGame().getPlayers()) {
-            if (p.getID().equals(String.valueOf(GameClient.getInstance().getClient().getClient().getID()))) {
+            Log.info("This is the players id", String.valueOf(p.getId()));
+            Log.info("This is my id", String.valueOf(GameClient.getInstance().getClient().getClient().getID()));
+            if (p.getId() == GameClient.getInstance().getClient().getClient().getID()) {
                 return p;
             }
         }
@@ -326,97 +391,322 @@
     /*
     Öffnet einen Dialog, wenn man eine Decision machen muss
      */
-    public void showDialogeChallenge(){
-        Dialog dia = new Dialog(this);
-        dia.setContentView(R.layout.decision_dialoge);
-        dia.setCanceledOnTouchOutside(false);
-        TextView text = dia.findViewById(R.id.info);
-        Button buttonTruth = dia.findViewById(R.id.truth);
-        Button buttonLie = dia.findViewById(R.id.lie);
-        dia.show();
+    public void showDialogeChallenge() {
+        diaDecision = new Dialog(this);
+        View view1 = View.inflate(this, R.layout.decision_dialoge, null);
+        setUpTypesSpinner(view1);
+        diaDecision.setContentView(view1);
+        diaDecision.setCanceledOnTouchOutside(false);
+        Toast myToast = new Toast(this);
+        String selectedCard = GameClient.getInstance().getGame().getTurn().getSelectedCard().getType().toString();
+        String chosenTyp = GameClient.getInstance().getGame().getTurn().getSelectedType().toString();
+        int player = GameClient.getInstance().getGame().getCurrentPlayer().getId();
+        int enemy = GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getId();
+        TextView text = diaDecision.findViewById(R.id.info);
+        Button buttonTruth = diaDecision.findViewById(R.id.truth);
+        Button buttonLie = diaDecision.findViewById(R.id.lie);
+        Button buttonHandOver = diaDecision.findViewById(R.id.handOverButton);
+        Spinner spinner = view1.findViewById(R.id.handOver);
+        ArrayList<String> list = new ArrayList<>();
+        for (Player player1 : GameClient.getInstance().getGame().getPlayers()) {
+            if (!(player1.getId() == me.getId()) && player1.getState() != PlayerState.PLAYED) {
+                list.add(String.valueOf(player1.getId()));
+            }
+        }
+
+        ArrayAdapter adapter = new ArrayAdapter(PlayerIngameMainActivity.this, android.R.layout.simple_spinner_dropdown_item, list);
+        spinner.setAdapter(adapter);
+        diaDecision.show();
+        myToast.setDuration(Toast.LENGTH_LONG);
+
         buttonTruth.setOnClickListener(view -> {
+            Toast toast = Toast.makeText(this, "Player: " + player + " played: " + selectedCard + " and said: " + chosenTyp + "and you said TRUTH", Toast.LENGTH_LONG);
+            toast.show();
             decission(Decision.TRUTH);
-            dia.dismiss();
+            diaDecision.dismiss();
         });
 
         buttonLie.setOnClickListener(view -> {
+            Toast toast = Toast.makeText(this, "Player: " + player + " played: " + selectedCard + " and said: " + chosenTyp + "and you said LIE", Toast.LENGTH_LONG);
+            toast.show();
             decission(Decision.LIE);
-            dia.dismiss();
+            diaDecision.dismiss();
+        });
+
+        buttonHandOver.setOnClickListener(view -> {
+
+            Player ene = null;
+            for (Player p : GameClient.getInstance().getGame().getPlayers()) {
+                if (p.getId() == Integer.parseInt(spinner.getSelectedItem().toString())) ;
+                ene = p;
+            }
+            Card card = GameClient.getInstance().getGame().getTurn().getSelectedCard();
+            assert ene != null;
+            Log.info("selected things", selectedCard + " " + card + " " + ene.getId());
+            GameClient.getInstance().getGame().handOver(me, new HandOver(ene,Decision.TRUTH));
+
         });
 
-        text.setText("Player: " + GameClient.getInstance().getGame().getCurrentPlayer().getName() + " played: " + GameClient.getInstance().getGame().getTurn().getSelectedType().toString());
 
+        String myText = "Player: " + GameClient.getInstance().getGame().getCurrentPlayer().getId() + " says " + GameClient.getInstance().getGame().getTurn().getSelectedType().toString();
+        text.setText(myText);
     }
 
     /*
     Wird geöffnet, wenn man nicht an der Reihe ist
      */
-    public void showDialogeWait(){
+    public void showDialogeWait() {
+        String myString = "Players: " + GameClient.getInstance().getGame().getCurrentPlayer().getId() + " turn!";
+        waitingDialogTextView.setText(myString);
+        alertDialog.show();
+    }
+
+    /*
+    Wird geöffnet, wenn das Spiel vorbei ist
+     */
+    public void showDialogeGameOver() {
         Dialog dia = new Dialog(this);
-        dia.setContentView(R.layout.waiting_dialoge);
+        dia.setContentView(R.layout.game_over_dialoge);
         dia.setCanceledOnTouchOutside(false);
-        TextView text = dia.findViewById(R.id.notYoutTurn);
-        text.setText("Player: " + GameClient.getInstance().getGame().getCurrentPlayer().getName() + " turn!");
+        TextView text = dia.findViewById(R.id.textGameOver);
+        int lostPlayer = GameClient.getInstance().getGame().getCurrentPlayer().getId();
+        if (me.getId() == lostPlayer) {
+            String lost = "You lost the game!";
+            text.setText(lost);
+        } else {
+            String won = "You won the game and player: " + lostPlayer + " lost!";
+            text.setText(won);
+        }
         dia.show();
-
     }
-        //möchte man den Stand verändern (Display), ruft man diese Klasse auf.
-        public void updateTheCollectedCards () {
-            krötenView.setText(me.getCollectedDeck().getKroete());
-            spinnenView.setText(me.getCollectedDeck().getSpinne());
-            fliegenView.setText(me.getCollectedDeck().getFliege());
-            scorpionView.setText(me.getCollectedDeck().getScorpion());
-            kakerlakeView.setText(me.getCollectedDeck().getKakerlake());
-            ratteView.setText(me.getCollectedDeck().getRatte());
-            stinkwanzeView.setText(me.getCollectedDeck().getStinkwanze());
-            fledermausView.setText(me.getCollectedDeck().getFledermaus());
-        }
+
+    //möchte man den Stand verändern (Display), ruft man diese Klasse auf.
+    public void updateTheCollectedCards() {
+        krötenView.setText(me.getCollectedDeck().getKroete());
+        spinnenView.setText(me.getCollectedDeck().getSpinne());
+        fliegenView.setText(me.getCollectedDeck().getFliege());
+        scorpionView.setText(me.getCollectedDeck().getScorpion());
+        kakerlakeView.setText(me.getCollectedDeck().getKakerlake());
+        ratteView.setText(me.getCollectedDeck().getRatte());
+        stinkwanzeView.setText(me.getCollectedDeck().getStinkwanze());
+        fledermausView.setText(me.getCollectedDeck().getFledermaus());
+    }
 
-        //zeigt die gesammelten Karten der Gegner
-        public void showEnemyCollectCards(){
+    //zeigt die gesammelten Karten der Gegner
+    public void showEnemyCollectCards() {
         String output = "";
 
-        for(Player all : GameClient.getInstance().getGame().getPlayers()){
+        for (Player all : GameClient.getInstance().getGame().getPlayers()) {
 
             //hier soll die ausgaben meiner karten verhindert werden.
-            if(all == me){
+            if (all == me) {
+            } else {
+                output += all.getCollectedDeck().toString() + ("\n");
             }
-            else{ output += all.getCollectedDeck().toString() + ("\n");}
         }
         messageText.setText(output);
         messageview.setVisibility(View.VISIBLE);
-        }
+    }
 
-        public void displayCardAmounts(){
-            krötenView.setText(me.getHandDeck().getKroete());
-            spinnenView.setText(me.getHandDeck().getSpinne());
-            fliegenView.setText(me.getHandDeck().getFliege());
-            scorpionView.setText(me.getHandDeck().getScorpion());
-            kakerlakeView.setText(me.getHandDeck().getKakerlake());
-            ratteView.setText(me.getHandDeck().getRatte());
-            fledermausView.setText(me.getHandDeck().getFledermaus());
-            stinkwanzeView.setText(me.getHandDeck().getStinkwanze());
-        }
+    public void displayCardAmounts() {
+        krötenView.setText(String.valueOf(me.getHandDeck().getKroete()));
+        spinnenView.setText(String.valueOf(me.getHandDeck().getSpinne()));
+        fliegenView.setText(String.valueOf(me.getHandDeck().getFliege()));
+        scorpionView.setText(String.valueOf(me.getHandDeck().getScorpion()));
+        kakerlakeView.setText(String.valueOf(me.getHandDeck().getKakerlake()));
+        ratteView.setText(String.valueOf(me.getHandDeck().getRatte()));
+        fledermausView.setText(String.valueOf(me.getHandDeck().getFledermaus()));
+        stinkwanzeView.setText(String.valueOf(me.getHandDeck().getStinkwanze()));
+
+        krötenView.invalidate();
+        spinnenView.invalidate();
+        fliegenView.invalidate();
+        scorpionView.invalidate();
+        kakerlakeView.invalidate();
+        ratteView.invalidate();
+        fledermausView.invalidate();
+        stinkwanzeView.invalidate();
+    }
 
-        public void checkTurn(){
-            //me ist nicht aktuell am Spiel beteiligt
-            if(!me.getID().equals(GameClient.getInstance().getGame().getCurrentPlayer().getID()) || !me.getID().equals(GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getID())){
-                Log.debug("Not your turn!");
-                Log.debug("Current Player: " + GameClient.getInstance().getGame().getCurrentPlayer().getName());
-                Log.debug("Current Enems: " + GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getName());
+    public void checkTurn() {
+        Log.info("The turn is checked here");
+        Toast toast = Toast.makeText(this, "!!!", Toast.LENGTH_LONG);
+
+
+        if(GameClient.getInstance().getGame().getCurrentState() == GameState.AWAITING_TURN){
+            if(me.getId()==GameClient.getInstance().getGame().getCurrentPlayer().getId()){
+               toast = Toast.makeText(this, "Your Turn!", Toast.LENGTH_LONG);
+            } else {
+                showDialogeWait();
+                toast = Toast.makeText(this, "Player is making a turn!", Toast.LENGTH_LONG);
+            }
+        } else if(GameClient.getInstance().getGame().getCurrentState() == GameState.AWAITING_DECISION){
+            if(me.getId()!=GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getId()){
+                toast = Toast.makeText(this, "Waiting for a decision!", Toast.LENGTH_LONG);
                 showDialogeWait();
-            }
-
-            //Turn wurde ausgeführt und me wurde als Enemy ausgewählt
-            if(GameClient.getInstance().getGame().getCurrentState() == GameState.AWAITING_DECISION && !GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getID().equals(me.getID())){
-                Log.debug("Current Player: " + GameClient.getInstance().getGame().getCurrentPlayer().getName());
-                Log.debug("Current Enems: " + GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getName());
-                Log.debug("You have to make a decission!");
+            } else if(me.getId()==GameClient.getInstance().getGame().getTurn().getSelectedEnemy().getId()){
+                toast = Toast.makeText(this, "Make a decision!", Toast.LENGTH_LONG);
                 showDialogeChallenge();
+            }
+        } else if (GameClient.getInstance().getGame().getCurrentState() == GameState.GAME_OVER) {
+            Log.info("Game ist over!");
+            toast = Toast.makeText(this, "Game is over!", Toast.LENGTH_LONG);
+            showDialogeGameOver();
+
+
+        } else  toast = Toast.makeText(this, "unclear state!", Toast.LENGTH_LONG);
+
+        toast.show();
+
+    }
+
+    public void setUpTypesSpinner(View view) {
+        types = (Spinner) view.findViewById(R.id.spinnerType);
+        typeList = new ArrayList<>();
+        typeList.addAll(Arrays.asList(Type.values()));
+        ArrayAdapter typAdapter = new ArrayAdapter(PlayerIngameMainActivity.this, android.R.layout.simple_spinner_dropdown_item, typeList);
+        types.setAdapter(typAdapter);
+    }
+
+    public void initializeDialogs(){
+        initializeWaitingDialog();
+        initializeChallengeDialog();
+        initializeGameOverDialog();
+    }
+
+    public void initializeWaitingDialog(){
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        View view = View.inflate(this, R.layout.waiting_dialoge, null);
+        builder.setView(view);
+        alertDialog = builder.create();
+        alertDialog.setCancelable(false);
+        waitingDialogTextView = view.findViewById(R.id.notYoutTurn);
+
+    }
+
+    public void initializeChallengeDialog(){
+
+    }
+
+    public void initializeGameOverDialog(){
+
+    }
+
+
+    class StateListenerImpl extends StateListener {
+
+        @Override
+        public void inform() {
+            runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    if (GameClient.getInstance().getGame().checkRoundOver()) {
+                        GameClient.getInstance().getGame().resetPlayerStatus();
+                    }
+
+                    diaDecision.dismiss();
+                    //diaWait.dismiss();
+                    if(alertDialog !=null)alertDialog.hide();
+
+                    displayCardAmounts();
+                    checkTurn();
+
+                }
+            });
+
+        }
+    }
+
+    //Methoden für das Verwenden des Shakes und des Cheats
+    public void CheckboxClicked(View v) {
+        while(true) {
+            if (((CheckBox) v).isChecked()) {
+                ShakeSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
+                accelerometer = ShakeSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
+            }
+        }
+    }
+    //Methode für das finden eines Shakes!
+    @Override
+    public void onSensorChanged(SensorEvent e) {
+
+        List changer = new ArrayList();
+
+
+        float x,y,z;
+        x = e.values[0];
+        y = e.values[1];
+        z = e.values[2];
+
+        float Xextract = Math.abs(wert1 - x );
+        float Yextract = Math.abs(wert2 - y );
+        float Zextract = Math.abs(wert3 - z );
+
+        if (Xextract < (float) 0.8) {
+            Xextract = (float) 0.0;
+        }
+
+        if (Yextract < (float) 0.8) {
+            Yextract = (float) 0.0;
+        }
+
+        if (Zextract < (float) 0.8) {
+            Zextract = (float) 0.0;
+        }
+
+        //Zwischenspeicher
+        wert1 = x;
+        wert2 = y;
+        wert3 = z;
+
+        if (Xextract > Yextract) {
+            if(erlaubnis == true){
+                ChangePlayersCollectedDecks();
+            }
+        }
+
+    }
+
+    //tauscht die Collected Karten unter den Spielern
+    public void ChangePlayersCollectedDecks(){
+
+        List changer = new ArrayList();
+
+        Toast.makeText(getApplicationContext(), "Cheat wird ausgeführt!!!", Toast.LENGTH_SHORT).show();
+
+        for (Player player : GameClient.getInstance().getGame().getPlayers()) {
+            changer.add(player.getCollectedDeck().getDeck());
+        }
+
+        Collections.reverse(changer);
+
+        for (Player player : GameClient.getInstance().getGame().getPlayers()) {
+            player.getCollectedDeck().setDeck(changer);
+            changer.remove(0);
+        }
+
+        erlaubnis = false;
+        cheatbox.setVisibility(View.INVISIBLE);
+    }
+
+    //Default methode fürs Handling
+    @Override
+    public void onAccuracyChanged(Sensor sensor, int accuracy) {
 
-            }
-        }
+    }
+    //Sollte wieder geschüttelt werden, akitivert sich der Listener
+    @Override
+    protected void onResume() {
+        super.onResume();
+        ShakeSensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);
+    }
+    //Sollte nicht geschüttelt werden, wird der Listerner abgeschalten.
+    @Override
+    protected void onPause() {
+        super.onPause();
+        ShakeSensorManager.unregisterListener(this);
     }
+}
 
 
 
@@ -425,3 +715,5 @@
 
 
 
+
+
Index: app/src/main/java/com/example/kakerlakenpoker/activities/ClientListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\n\r\nimport com.esotericsoftware.kryonet.Connection;\r\nimport com.esotericsoftware.kryonet.Listener;\r\nimport com.esotericsoftware.minlog.Log;\r\nimport com.example.game.BuildGame;\r\nimport com.example.server.network.NetworkUtils;\r\nimport com.example.server.network.dto.PlayerReady;\r\nimport com.example.server.network.game.GameData;\r\nimport com.example.server.dto.clienttomainserver.GameServerReadyToConnect;\r\nimport com.example.server.dto.mainservertoclient.ClientJoinedResponse;\r\nimport com.example.server.dto.mainservertoclient.ClientsToJoinGameServer;\r\nimport com.example.server.dto.mainservertoclient.DestroyLobby;\r\nimport com.example.server.dto.mainservertoclient.ExitLobbyResponse;\r\nimport com.example.server.network.dto.gameservertoclient.GameOver;\r\nimport com.example.server.network.dto.gameservertoclient.GameUpdate;\r\nimport com.example.server.network.dto.gameservertoclient.InitGame;\r\nimport com.example.server.dto.mainservertoclient.SendOpenLobbies;\r\nimport com.example.server.dto.mainservertoclient.StartUpGameServer;\r\n\r\n\r\npublic class ClientListener extends Listener {\r\n    private final GameClient gameClient;\r\n\r\n\r\n    public ClientListener(GameClient gameClient) {\r\n        this.gameClient = gameClient;\r\n    }\r\n\r\n    @Override\r\n    public void connected(Connection connection) {\r\n        Log.info(\"Client connected: \" + connection.getRemoteAddressTCP());\r\n    }\r\n\r\n    @Override\r\n    public void received(Connection connection, Object object) {\r\n        Log.info(\"Received Object: \" + object.getClass());\r\n\r\n        if (object instanceof SendOpenLobbies) {\r\n            gameClient.setOpenLobbies(((SendOpenLobbies) object).getLobbies());\r\n        } else if(object instanceof InitGame){\r\n            BuildGame buildGame = new BuildGame();\r\n            buildGame.setPlayers(((InitGame) object).getGameUpdate().getPlayers());\r\n            gameClient.setGame(buildGame.buildGame());\r\n            gameClient.getGame().setGameListener(new GameListenerClientSide(gameClient));\r\n            gameClient.getGame().updateGame(((InitGame) object).getGameUpdate());\r\n            if(gameClient.getActivity() instanceof ShowPlayersInLobbyActivity)((ShowPlayersInLobbyActivity) gameClient.getActivity()).showGame();\r\n\r\n        }else if (object instanceof GameUpdate){\r\n            gameClient.getGame().updateGame((GameUpdate)object);\r\n        } else if(object instanceof GameOver){\r\n\r\n        } else if(object instanceof ClientJoinedResponse) {\r\n            ClientJoinedResponseHandler(object);\r\n        }else if (object instanceof ExitLobbyResponse){\r\n            ExitLobbyResponseHandler(object);\r\n        }else if (object instanceof DestroyLobby){\r\n            DestroyLobbyHandler();\r\n        }else if (object instanceof ClientsToJoinGameServer){\r\n            gameClient.connectToNewServer(((ClientsToJoinGameServer) object).getIpToConnect(), this);\r\n            gameClient.getClient().sendMessage(new PlayerReady());\r\n        }\r\n    }\r\n\r\n    private void ExitLobbyResponseHandler(Object object){\r\n        String ipAddress = ((ExitLobbyResponse) object).getIpAddress();\r\n        if(ipAddress.equals(NetworkUtils.getIpAddressFromDevice())){\r\n            gameClient.setCurrentLobby(null);\r\n        }\r\n        ((ShowPlayersInLobbyActivity) gameClient.getListAdapter().getContext()).runOnUiThread(\r\n                () ->{\r\n                    for(int i=0; i<gameClient.getListAdapter().getCount(); i++){\r\n                        if(gameClient.getListAdapter().getItem(i).equals(gameClient.getCurrentLobby().getPlayersIpList().get(ipAddress))){\r\n                            gameClient.getListAdapter().remove(gameClient.getListAdapter().getItem(i));\r\n                            break;\r\n                        }\r\n                    }\r\n                    gameClient.getListAdapter().notifyDataSetChanged();\r\n                }\r\n        );\r\n    }\r\n\r\n    private void ClientJoinedResponseHandler(Object object){\r\n        gameClient.setCurrentLobby(((ClientJoinedResponse) object).getLobbyJoined());\r\n\r\n        ((ShowPlayersInLobbyActivity) gameClient.getListAdapter().getContext()).runOnUiThread(\r\n                () -> {\r\n                    for (int i = 0; i < gameClient.getListAdapter().getCount(); i++) {\r\n                        gameClient.getListAdapter().clear();\r\n                    }\r\n\r\n                    gameClient.getListAdapter().addAll(gameClient.getCurrentLobby().getPlayersIpList().values());\r\n                    gameClient.getListAdapter().notifyDataSetChanged();\r\n                });\r\n        Log.info(gameClient.getCurrentLobby().getPlayersIpList().toString());\r\n    }\r\n\r\n    private void DestroyLobbyHandler(){\r\n        Log.info(\"Destroy Lobby\");\r\n        ((ShowPlayersInLobbyActivity) gameClient.getListAdapter().getContext()).runOnUiThread(\r\n                () -> {\r\n                    gameClient.getListAdapter().getContext().startActivity(new Intent(gameClient.getListAdapter().getContext(), MainMenuActivity.class));\r\n                });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void disconnected(Connection connection) {\r\n        Log.info(\"Client disconnected: \" + connection.getRemoteAddressTCP());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/ClientListener.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/ClientListener.java	(date 1623528549284)
@@ -8,6 +8,7 @@
 import com.esotericsoftware.kryonet.Listener;
 import com.esotericsoftware.minlog.Log;
 import com.example.game.BuildGame;
+import com.example.game.Game;
 import com.example.server.network.NetworkUtils;
 import com.example.server.network.dto.PlayerReady;
 import com.example.server.network.game.GameData;
@@ -43,17 +44,15 @@
         if (object instanceof SendOpenLobbies) {
             gameClient.setOpenLobbies(((SendOpenLobbies) object).getLobbies());
         } else if(object instanceof InitGame){
-            BuildGame buildGame = new BuildGame();
-            buildGame.setPlayers(((InitGame) object).getGameUpdate().getPlayers());
-            gameClient.setGame(buildGame.buildGame());
+            Game game = ((InitGame) object).getGame();
+            gameClient.setGame(game);
             gameClient.getGame().setGameListener(new GameListenerClientSide(gameClient));
-            gameClient.getGame().updateGame(((InitGame) object).getGameUpdate());
             if(gameClient.getActivity() instanceof ShowPlayersInLobbyActivity)((ShowPlayersInLobbyActivity) gameClient.getActivity()).showGame();
 
         }else if (object instanceof GameUpdate){
             gameClient.getGame().updateGame((GameUpdate)object);
         } else if(object instanceof GameOver){
-
+            gameClient.getGame().gameOver(((GameOver) object).getLoser());
         } else if(object instanceof ClientJoinedResponse) {
             ClientJoinedResponseHandler(object);
         }else if (object instanceof ExitLobbyResponse){
Index: core/src/main/java/com/example/server/network/kryo/RegisterHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.server.network.kryo;\r\n\r\nimport com.esotericsoftware.kryo.Kryo;\r\nimport com.esotericsoftware.kryo.util.IntArray;\r\nimport com.example.game.card.Card;\r\nimport com.example.game.card.GameDeck;\r\nimport com.example.game.card.Type;\r\nimport com.example.game.Decision;\r\nimport com.example.game.GameState;\r\nimport com.example.game.Turn;\r\nimport com.example.server.dto.Lobby;\r\nimport com.example.server.dto.clienttomainserver.ClientName;\r\nimport com.example.server.dto.clienttomainserver.ClientJoinedRequest;\r\nimport com.example.server.dto.clienttomainserver.GameServerReadyToConnect;\r\nimport com.example.server.dto.mainservertoclient.ClientJoinedResponse;\r\nimport com.example.server.dto.mainservertoclient.ClientsToJoinGameServer;\r\nimport com.example.server.dto.mainservertoclient.DestroyLobby;\r\nimport com.example.server.dto.clienttomainserver.ExitLobby;\r\nimport com.example.server.dto.mainservertoclient.ExitLobbyResponse;\r\nimport com.example.server.network.dto.gameservertoclient.GameOver;\r\nimport com.example.server.network.dto.gameservertoclient.GameUpdate;\r\nimport com.example.server.network.dto.gameservertoclient.InitGame;\r\nimport com.example.server.dto.BaseMessage;\r\nimport com.example.server.network.dto.clienttogameserver.MakeDecision;\r\nimport com.example.server.network.dto.clienttogameserver.MakeTurn;\r\nimport com.example.server.network.dto.PlayerReady;\r\nimport com.example.server.dto.clienttomainserver.GetOpenLobbies;\r\nimport com.example.server.dto.clienttomainserver.OpenLobby;\r\nimport com.example.server.dto.mainservertoclient.SendOpenLobbies;\r\nimport com.example.server.dto.mainservertoclient.StartUpGameServer;\r\nimport com.example.server.network.game.GameData;\r\nimport com.example.game.player.CollectedDeck;\r\nimport com.example.game.player.HandDeck;\r\nimport com.example.game.player.Player;\r\nimport com.example.game.player.PlayerState;\r\n\r\nimport java.lang.reflect.Array;\r\nimport java.net.InetSocketAddress;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class RegisterHelper {\r\n    private RegisterHelper(){}\r\n\r\n    public static void registerClasses(Kryo kryo){\r\n        kryo.register(BaseMessage.class);\r\n        kryo.register(ClientName.class);\r\n        kryo.register(InetSocketAddress.class);\r\n        kryo.register(ClientJoinedRequest.class);\r\n        kryo.register(ClientJoinedResponse.class);\r\n        kryo.register(OpenLobby.class);\r\n        kryo.register(Lobby.class);\r\n        kryo.register(GetOpenLobbies.class);\r\n        kryo.register(OpenLobby.class);\r\n        kryo.register(GameDeck.class);\r\n        kryo.register(GameData.class);\r\n        kryo.register(SendOpenLobbies.class);\r\n        kryo.register(PlayerReady.class);\r\n        kryo.register(Player.class);\r\n        kryo.register(GameUpdate.class);\r\n        kryo.register(MakeTurn.class);\r\n        kryo.register(MakeDecision.class);\r\n        kryo.register(PlayerState.class);\r\n        kryo.register(HandDeck.class);\r\n        kryo.register(CollectedDeck.class);\r\n        kryo.register(Card.class);\r\n        kryo.register(Type.class);\r\n        kryo.register(Decision.class);\r\n        kryo.register(GameState.class);\r\n        kryo.register(Turn.class);\r\n        kryo.register(InitGame.class);\r\n        kryo.register(GameOver.class);\r\n        kryo.register(ExitLobby.class);\r\n        kryo.register(ExitLobbyResponse.class);\r\n        kryo.register(DestroyLobby.class);\r\n        kryo.register(StartUpGameServer.class);\r\n        kryo.register(GameServerReadyToConnect.class);\r\n        kryo.register(ClientsToJoinGameServer.class);\r\n\r\n        kryo.register(Array.class);\r\n        kryo.register(IntArray.class);\r\n        kryo.register(ArrayList.class);\r\n        kryo.register(HashMap.class);\r\n        kryo.register(String.class);\r\n        kryo.register(int[].class);\r\n        kryo.register(Object[].class);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/server/network/kryo/RegisterHelper.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/server/network/kryo/RegisterHelper.java	(date 1623528549329)
@@ -2,6 +2,7 @@
 
 import com.esotericsoftware.kryo.Kryo;
 import com.esotericsoftware.kryo.util.IntArray;
+import com.example.game.Game;
 import com.example.game.card.Card;
 import com.example.game.card.GameDeck;
 import com.example.game.card.Type;
@@ -45,7 +46,7 @@
     public static void registerClasses(Kryo kryo){
         kryo.register(BaseMessage.class);
         kryo.register(ClientName.class);
-        kryo.register(InetSocketAddress.class);
+        kryo.register(Game.class);
         kryo.register(ClientJoinedRequest.class);
         kryo.register(ClientJoinedResponse.class);
         kryo.register(OpenLobby.class);
Index: app/src/test/java/com/example/kakerlakenpoker/PlayerClassUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker;\r\n\r\nimport com.example.game.player.CollectedDeck;\r\nimport com.example.game.player.HandDeck;\r\nimport com.example.game.player.Player;\r\n\r\nimport org.junit.After;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport org.junit.jupiter.api.Assertions;\r\n\r\npublic class PlayerClassUnitTest {\r\n    HandDeck handDeck;\r\n    CollectedDeck collectedDeck;\r\n    Player player;\r\n\r\n    @Before\r\n    public void setUp(){\r\n       this.handDeck = new HandDeck();\r\n        this.collectedDeck = new CollectedDeck();\r\n        this.player = new Player(\"Testi\",this.handDeck,this.collectedDeck);\r\n    }\r\n    @After\r\n    public void tearDown(){\r\n        this.handDeck = null;\r\n        this.collectedDeck = null;\r\n        this.player = null;\r\n    }\r\n\r\n    @Test\r\n    public void testGetName(){\r\n<<<<<<< HEAD\r\n        Assertions.assertEquals(\"Testi\",this.player.getID());\r\n=======\r\n        Assertions.assertEquals(\"Testi\",this.player.getId());\r\n>>>>>>> reorderingFiles\r\n    }\r\n\r\n    @Test\r\n    public void testSetName(){\r\n<<<<<<< HEAD\r\n        this.player.setID(\"Testu\");\r\n        Assertions.assertEquals(\"Testu\",this.player.getID());\r\n=======\r\n        this.player.setId(\"Testu\");\r\n        Assertions.assertEquals(\"Testu\",this.player.getId());\r\n>>>>>>> reorderingFiles\r\n    }\r\n\r\n    @Test\r\n    public void testGetHandDeck(){\r\n        Assertions.assertEquals(handDeck,this.player.getHandDeck());\r\n    }\r\n    @Test\r\n    public void testSetHandDeck(){\r\n        HandDeck newHandDeck = new HandDeck();\r\n        player.setHandDeck(newHandDeck);\r\n        Assertions.assertEquals(newHandDeck,player.getHandDeck());\r\n    }\r\n    @Test\r\n    public void testGetCollectedDeck(){\r\n        Assertions.assertEquals(collectedDeck,this.player.getCollectedDeck());\r\n    }\r\n    @Test\r\n    public void testSetCollectedDeck(){\r\n        CollectedDeck newCollDeck = new CollectedDeck();\r\n        player.setCollectedDeck(newCollDeck);\r\n        Assertions.assertEquals(newCollDeck,this.player.getCollectedDeck());\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/example/kakerlakenpoker/PlayerClassUnitTest.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/test/java/com/example/kakerlakenpoker/PlayerClassUnitTest.java	(date 1623529225821)
@@ -18,7 +18,7 @@
     public void setUp(){
        this.handDeck = new HandDeck();
         this.collectedDeck = new CollectedDeck();
-        this.player = new Player("Testi",this.handDeck,this.collectedDeck);
+        this.player = new Player(1,this.handDeck,this.collectedDeck);
     }
     @After
     public void tearDown(){
@@ -29,22 +29,13 @@
 
     @Test
     public void testGetName(){
-<<<<<<< HEAD
-        Assertions.assertEquals("Testi",this.player.getID());
-=======
-        Assertions.assertEquals("Testi",this.player.getId());
->>>>>>> reorderingFiles
+        Assertions.assertEquals(1,this.player.getId());
     }
 
     @Test
     public void testSetName(){
-<<<<<<< HEAD
-        this.player.setID("Testu");
-        Assertions.assertEquals("Testu",this.player.getID());
-=======
-        this.player.setId("Testu");
-        Assertions.assertEquals("Testu",this.player.getId());
->>>>>>> reorderingFiles
+        this.player.setId(2);
+        Assertions.assertEquals(2,this.player.getId());
     }
 
     @Test
Index: app/src/main/res/layout-land/game_over_dialoge.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/game_over_dialoge.xml	(date 1623528549302)
+++ app/src/main/res/layout-land/game_over_dialoge.xml	(date 1623528549302)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/textGameOver"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kakerlakenpoker/activities/ShowPlayersInLobbyActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ListView;\r\n\r\nimport com.esotericsoftware.minlog.Log;\r\nimport com.example.game.Game;\r\nimport com.example.kakerlakenpoker.R;\r\nimport com.example.server.network.NetworkUtils;\r\nimport com.example.server.dto.clienttomainserver.ClientJoinedRequest;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class ShowPlayersInLobbyActivity extends AppCompatActivity {\r\n    private ListView currentPlayersInLobby;\r\n    private FloatingActionButton exitLobbyBtn;\r\n    private GameClient client;\r\n    private Intent intent;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        Log.info(\"ShowPlayersInLobby started\");\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_show_players_in_lobby);\r\n        exitLobbyBtn = findViewById(R.id.exitLobbyBtn);\r\n        exitLobbyBtn.setOnClickListener((View view) -> exitLobby());\r\n        client = GameClient.getInstance();\r\n        client.setActivity(this);\r\n        IpListAdapter listAdapter = new IpListAdapter(this, new ArrayList<String>());\r\n        currentPlayersInLobby = findViewById(R.id.ListViewCurrentPlayersInLobby);\r\n        currentPlayersInLobby.setAdapter(listAdapter);\r\n        client.setListAdapter(listAdapter);\r\n        Thread clientJoined = new Thread(() ->\r\n                client.getClient().sendMessage(new ClientJoinedRequest(client.getCurrentLobby().getName(), NetworkUtils.getIpAddressFromDevice()))\r\n        );\r\n        clientJoined.start();\r\n        try {\r\n            clientJoined.join();\r\n        } catch (InterruptedException e) {\r\n            Thread.currentThread().interrupt();\r\n            Log.info(e.getMessage());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        GameClient.getInstance().setActivity(null);\r\n    }\r\n\r\n    private void exitLobby() {\r\n        GameClient.getInstance().exitLobby();\r\n        intent = new Intent(ShowPlayersInLobbyActivity.this, MainMenuActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void showGame() {\r\n        Intent intent = new Intent(this, PlayerIngameMainActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/ShowPlayersInLobbyActivity.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/ShowPlayersInLobbyActivity.java	(date 1623528549297)
@@ -21,6 +21,7 @@
     private FloatingActionButton exitLobbyBtn;
     private GameClient client;
     private Intent intent;
+    private static boolean isJoined = false;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -30,11 +31,8 @@
         exitLobbyBtn = findViewById(R.id.exitLobbyBtn);
         exitLobbyBtn.setOnClickListener((View view) -> exitLobby());
         client = GameClient.getInstance();
-        client.setActivity(this);
-        IpListAdapter listAdapter = new IpListAdapter(this, new ArrayList<String>());
-        currentPlayersInLobby = findViewById(R.id.ListViewCurrentPlayersInLobby);
-        currentPlayersInLobby.setAdapter(listAdapter);
-        client.setListAdapter(listAdapter);
+        if(!isJoined){
+        GameClient client = GameClient.getInstance();
         Thread clientJoined = new Thread(() ->
                 client.getClient().sendMessage(new ClientJoinedRequest(client.getCurrentLobby().getName(), NetworkUtils.getIpAddressFromDevice()))
         );
@@ -43,8 +41,16 @@
             clientJoined.join();
         } catch (InterruptedException e) {
             Thread.currentThread().interrupt();
-            Log.info(e.getMessage());
+            com.esotericsoftware.minlog.Log.info(e.getMessage());
         }
+        isJoined=false;
+        }
+        client.setActivity(this);
+        IpListAdapter listAdapter = new IpListAdapter(this, new ArrayList<String>());
+        currentPlayersInLobby = findViewById(R.id.ListViewCurrentPlayersInLobby);
+        currentPlayersInLobby.setAdapter(listAdapter);
+        client.setListAdapter(listAdapter);
+
     }
 
     @Override
Index: app/src/main/res/layout-land/startscreenview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/startscreenview.xml	(date 1623528549303)
+++ app/src/main/res/layout-land/startscreenview.xml	(date 1623528549303)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@drawable/startscreen"
+    >
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: core/src/main/java/com/example/server/network/dto/gameservertoclient/GameUpdate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.server.network.dto.gameservertoclient;\r\n\r\nimport com.example.game.Decision;\r\nimport com.example.game.GameState;\r\nimport com.example.game.Turn;\r\nimport com.example.game.player.Player;\r\nimport com.example.server.dto.BaseMessage;\r\n\r\nimport java.util.List;\r\n\r\npublic class GameUpdate extends BaseMessage {\r\n    private List<Player> players;\r\n    private Player currentPlayer;\r\n    private GameState state;\r\n    private Turn turn;\r\n    private Decision decision;\r\n\r\n    public GameUpdate(List<Player> players, Player currentPlayer, GameState state, Turn turn,Decision decision){\r\n        this.players = players;\r\n        this.currentPlayer = currentPlayer;\r\n        this.state=state;\r\n        this.turn= turn;\r\n        this.decision = decision;\r\n    }\r\n    public GameUpdate(){}\r\n\r\n    public List<Player> getPlayers() {\r\n        return players;\r\n    }\r\n\r\n    public Player getCurrentPlayer() {\r\n        return currentPlayer;\r\n    }\r\n\r\n    public GameState getState() {\r\n        return state;\r\n    }\r\n\r\n    public Turn getTurn() {\r\n        return turn;\r\n    }\r\n\r\n    public Decision getDecision(){\r\n        return decision;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/server/network/dto/gameservertoclient/GameUpdate.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/server/network/dto/gameservertoclient/GameUpdate.java	(date 1623528549321)
@@ -22,6 +22,8 @@
         this.turn= turn;
         this.decision = decision;
     }
+
+
     public GameUpdate(){}
 
     public List<Player> getPlayers() {
Index: app/src/main/res/layout/startscreenview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/startscreenview.xml	(date 1623528549305)
+++ app/src/main/res/layout/startscreenview.xml	(date 1623528549305)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kakerlakenpoker/activities/SearchLobbyActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.kakerlakenpoker.R;\r\nimport com.example.server.dto.clienttomainserver.GetOpenLobbies;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\npublic class SearchLobbyActivity extends AppCompatActivity {\r\n    private Intent intent;\r\n    private FloatingActionButton floatingActionButton;\r\n    private RecyclerView recyclerView ;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.searchlobby);\r\n\r\n        floatingActionButton = findViewById(R.id.floatingActionButtonSearchLobbyView);\r\n        floatingActionButton.setOnClickListener((View view)->goBack());\r\n\r\n        Thread thread = new Thread(){\r\n            @Override\r\n            public void run() {\r\n                GameClient.getInstance().getClient().sendMessage(new GetOpenLobbies());\r\n            }\r\n        };\r\n\r\n        thread.start();\r\n\r\n        try {\r\n            thread.join();\r\n        } catch (InterruptedException e) {\r\n            Thread.currentThread().interrupt();\r\n        }\r\n        initRecyclerView();\r\n\r\n    }\r\n\r\n    public void goBack(){\r\n        intent = new Intent(this, MainMenuActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void initRecyclerView(){\r\n        recyclerView = findViewById(R.id.lobbiesRecyclerView);\r\n        Log.e(\"LobbyCount: \", String.valueOf(GameClient.getInstance().getOpenLobbies().size()));\r\n        LobbiesRecyclerViewAdapter adapter = new LobbiesRecyclerViewAdapter(GameClient.getInstance().getOpenLobbies());\r\n        recyclerView.setAdapter(adapter);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/SearchLobbyActivity.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/SearchLobbyActivity.java	(date 1623528549293)
@@ -1,5 +1,6 @@
 package com.example.kakerlakenpoker.activities;
 
+import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
@@ -10,7 +11,9 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.kakerlakenpoker.R;
+import com.example.server.dto.clienttomainserver.ClientJoinedRequest;
 import com.example.server.dto.clienttomainserver.GetOpenLobbies;
+import com.example.server.network.NetworkUtils;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 
 public class SearchLobbyActivity extends AppCompatActivity {
@@ -25,7 +28,7 @@
 
         floatingActionButton = findViewById(R.id.floatingActionButtonSearchLobbyView);
         floatingActionButton.setOnClickListener((View view)->goBack());
-
+        GameClient.getInstance().setLobbyAdapter(new LobbyAdapter(this));
         Thread thread = new Thread(){
             @Override
             public void run() {
@@ -34,12 +37,6 @@
         };
 
         thread.start();
-
-        try {
-            thread.join();
-        } catch (InterruptedException e) {
-            Thread.currentThread().interrupt();
-        }
         initRecyclerView();
 
     }
@@ -50,11 +47,20 @@
     }
 
     public void initRecyclerView(){
-        recyclerView = findViewById(R.id.lobbiesRecyclerView);
-        Log.e("LobbyCount: ", String.valueOf(GameClient.getInstance().getOpenLobbies().size()));
-        LobbiesRecyclerViewAdapter adapter = new LobbiesRecyclerViewAdapter(GameClient.getInstance().getOpenLobbies());
-        recyclerView.setAdapter(adapter);
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        Context context = this;
+        runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                recyclerView = findViewById(R.id.lobbiesRecyclerView);
+                Log.e("LobbyCount: ", String.valueOf(GameClient.getInstance().getOpenLobbies().size()));
+                LobbiesRecyclerViewAdapter adapter = new LobbiesRecyclerViewAdapter(GameClient.getInstance().getOpenLobbies());
+                recyclerView.setAdapter(adapter);
+                recyclerView.setLayoutManager(new LinearLayoutManager(context));
+            }
+        });
+
+
+
     }
 
 
Index: app/src/main/java/com/example/kakerlakenpoker/activities/LobbiesRecyclerViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.kakerlakenpoker.R;\r\n\r\nimport com.example.server.dto.Lobby;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class LobbiesRecyclerViewAdapter extends RecyclerView.Adapter<LobbiesRecyclerViewAdapter.ViewHolder> {\r\n    private ArrayList<Lobby> lobbies;\r\n\r\n    public static class ViewHolder extends RecyclerView.ViewHolder {\r\n        private final TextView lobbyID;\r\n        private final TextView playerCount;\r\n        private final Button joinUp;\r\n        private final Context context;\r\n\r\n\r\n        public ViewHolder(View view) {\r\n            super(view);\r\n\r\n            lobbyID = view.findViewById(R.id.lobbyID);\r\n            playerCount = view.findViewById(R.id.playerCount);\r\n            joinUp = view.findViewById(R.id.joinButton);\r\n            context = view.getContext();\r\n        }\r\n\r\n        public TextView getLobbyID() {\r\n            return lobbyID;\r\n        }\r\n\r\n        public TextView getPlayerCount() {\r\n            return playerCount;\r\n        }\r\n\r\n        public Button getJoinUp() {\r\n            return joinUp;\r\n        }\r\n\r\n        public Context getContext(){\r\n            return context;\r\n        }\r\n    }\r\n\r\n    public LobbiesRecyclerViewAdapter(ArrayList<Lobby> lobbies) {\r\n        this.lobbies = lobbies;\r\n    }\r\n\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(ViewGroup viewGroup, int viewType) {\r\n        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.singlelobby, viewGroup, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(ViewHolder viewholder, final int position) {\r\n        viewholder.getPlayerCount().setText(String.valueOf(lobbies.get(position).getPlayersIpList().size()));\r\n        viewholder.getLobbyID().setText(lobbies.get(position).getName());\r\n        viewholder.getJoinUp().setOnClickListener((View view) -> {\r\n            joinUp(viewholder, position);\r\n        });\r\n    }\r\n\r\n    public void joinUp(ViewHolder viewHolder, int position) {\r\n        new Thread(() -> {\r\n            GameClient client = GameClient.getInstance();\r\n            client.setCurrentLobby(lobbies.get(position));\r\n            Intent intent = new Intent(viewHolder.context, ShowPlayersInLobbyActivity.class);\r\n            viewHolder.context.startActivity(intent);\r\n        }).start();\r\n    }\r\n    @Override\r\n    public int getItemCount() {\r\n        return lobbies.size();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/LobbiesRecyclerViewAdapter.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/LobbiesRecyclerViewAdapter.java	(date 1623528549286)
@@ -11,9 +11,12 @@
 
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.esotericsoftware.minlog.Log;
 import com.example.kakerlakenpoker.R;
 
 import com.example.server.dto.Lobby;
+import com.example.server.dto.clienttomainserver.ClientJoinedRequest;
+import com.example.server.network.NetworkUtils;
 
 import java.util.ArrayList;
 
@@ -67,18 +70,22 @@
     public void onBindViewHolder(ViewHolder viewholder, final int position) {
         viewholder.getPlayerCount().setText(String.valueOf(lobbies.get(position).getPlayersIpList().size()));
         viewholder.getLobbyID().setText(lobbies.get(position).getName());
+
         viewholder.getJoinUp().setOnClickListener((View view) -> {
             joinUp(viewholder, position);
         });
+
     }
 
     public void joinUp(ViewHolder viewHolder, int position) {
-        new Thread(() -> {
-            GameClient client = GameClient.getInstance();
+        GameClient client = GameClient.getInstance();
+
+        new Thread(() -> {
             client.setCurrentLobby(lobbies.get(position));
             Intent intent = new Intent(viewHolder.context, ShowPlayersInLobbyActivity.class);
             viewHolder.context.startActivity(intent);
         }).start();
+
     }
     @Override
     public int getItemCount() {
Index: core/src/main/java/com/example/server/network/dto/gameservertoclient/InitGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.server.network.dto.gameservertoclient;\r\n\r\n\r\nimport com.example.server.dto.BaseMessage;\r\n\r\npublic class InitGame extends BaseMessage {\r\n    private GameUpdate gameUpdate;\r\n    public InitGame(){\r\n\r\n    }\r\n\r\n    public InitGame(GameUpdate gameUpdate){\r\n        this.gameUpdate=gameUpdate;\r\n    }\r\n    public GameUpdate getGameUpdate(){\r\n        return gameUpdate;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/server/network/dto/gameservertoclient/InitGame.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/server/network/dto/gameservertoclient/InitGame.java	(date 1623528549325)
@@ -1,18 +1,17 @@
 package com.example.server.network.dto.gameservertoclient;
 
 
+import com.example.game.Game;
 import com.example.server.dto.BaseMessage;
 
 public class InitGame extends BaseMessage {
-    private GameUpdate gameUpdate;
-    public InitGame(){
-
+    Game game;
+    public InitGame(Game game){
+        this.game = game;
     }
+    public InitGame(){}
 
-    public InitGame(GameUpdate gameUpdate){
-        this.gameUpdate=gameUpdate;
-    }
-    public GameUpdate getGameUpdate(){
-        return gameUpdate;
+    public Game getGame(){
+        return game;
     }
 }
Index: app/src/main/java/com/example/kakerlakenpoker/activities/MainMenuActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport com.example.kakerlakenpoker.R;\r\n\r\n\r\npublic class MainMenuActivity extends AppCompatActivity {\r\n    private Intent intent;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.mainmenu);\r\n\r\n        Button createLobbyButton = (Button) findViewById(R.id.create_lobby_button);\r\n        createLobbyButton.setOnClickListener((View view)-> createLobby());\r\n\r\n\r\n        Button searchLobbyButton = (Button) findViewById(R.id.search_button);\r\n        searchLobbyButton.setOnClickListener((View view)-> searchLobby());\r\n\r\n    }\r\n\r\n    public void searchLobby() {\r\n        intent = new Intent(MainMenuActivity.this, SearchLobbyActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    public void createLobby() {\r\n        intent = new Intent(MainMenuActivity.this, CreateLobbyActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/MainMenuActivity.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/MainMenuActivity.java	(date 1623528549291)
@@ -5,7 +5,13 @@
 import android.os.Bundle;
 import android.view.View;
 import android.widget.Button;
+
+import com.esotericsoftware.minlog.Log;
+import com.example.game.Game;
 import com.example.kakerlakenpoker.R;
+import com.example.server.dto.clienttomainserver.ClientJoinedRequest;
+import com.example.server.dto.clienttomainserver.GetOpenLobbies;
+import com.example.server.network.NetworkUtils;
 
 
 public class MainMenuActivity extends AppCompatActivity {
Index: core/src/main/java/com/example/game/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.game;\r\n\r\n\r\nimport com.esotericsoftware.minlog.Log;\r\nimport com.example.game.card.Card;\r\nimport com.example.game.card.Type;\r\nimport com.example.game.listener.GameListener;\r\nimport com.example.server.network.dto.gameservertoclient.GameUpdate;\r\nimport com.example.game.player.Player;\r\nimport com.example.game.player.PlayerState;\r\nimport com.example.server.network.game.GameData;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class Game {\r\n    private List<Player> players;\r\n    private Player currentPlayer;\r\n    private GameState currentState;\r\n    private Turn turn;\r\n    private Decision decision;\r\n    private GameData gameData;\r\n    private GameListener listener;\r\n\r\n    Card playcard;\r\n\r\n\r\n    public Game() {\r\n\r\n    }\r\n\r\n    //eventuell besser einfach einen setter dafür verwenden!\r\n    public Game(List<Player> players) {\r\n        this.players = players;\r\n        Random random = new Random();\r\n        int randomNumber = random.nextInt(players.size());\r\n        currentPlayer = players.get(randomNumber);\r\n        changeState(GameState.AWAITING_GO);\r\n    }\r\n\r\n    public void changeState(GameState state) {\r\n        GameUpdate gameUpdate = new GameUpdate(players, currentPlayer, state, turn, decision);\r\n        if(listener!=null)listener.notify(gameUpdate, this.currentState);\r\n        this.currentState = state;\r\n        Log.info(\"GameState changed to \" + state.name() + \" and current players name is: \" + currentPlayer.getId());\r\n        if(turn != null) Log.info(\"Current turn contains: Card: \"+turn.getSelectedCard().getType()+\", Type: \"+ turn.getSelectedType()+\", enemy: \"+turn.getSelectedEnemy().getId());\r\n\r\n    }\r\n\r\n    public void makeTurn(Player player, Turn turn) {\r\n\r\n\r\n        if (currentState == GameState.AWAITING_TURN && player.getId()==currentPlayer.getId()) {\r\n            this.turn = turn;\r\n            changeState(GameState.AWAITING_DECISION);\r\n            //currentPlayer.getHandDeck().removeCard(turn.getSelectedCard());\r\n            currentPlayer.setState(PlayerState.PLAYED);\r\n\r\n        } else  Log.info(\"not permitted to make a turn player: \"+currentPlayer.getId());\r\n    }\r\n\r\n    public void makeDecision(Player player, Decision decision) {\r\n        if (currentState == GameState.AWAITING_DECISION && player.getId()==(turn.getSelectedEnemy().getId())) {\r\n            this.decision=decision;\r\n            if ((turn.getSelectedCard().getType() != turn.getSelectedType() && decision == Decision.TRUTH) ||\r\n                    (turn.getSelectedCard().getType() == turn.getSelectedType() && decision == Decision.LIE)) {\r\n                currentPlayer = turn.getSelectedEnemy();\r\n            }\r\n            currentPlayer.getCollectedDeck().addCard(turn.getSelectedCard());\r\n            if(currentPlayer.getCollectedDeck().hasLost())changeState(GameState.GAME_OVER);\r\n            else changeState(GameState.AWAITING_TURN);\r\n        } else  Log.info(\"not permitted to make a decision player: \"+player.getId());\r\n        Log.info(\"the decision is: \"+ decision.name());\r\n    }\r\n\r\n    public void startGame(){\r\n        changeState(GameState.AWAITING_TURN);\r\n    }\r\n\r\n    public void reject(Player player) {\r\n        currentPlayer = player;\r\n        currentState = GameState.AWAITING_TURN;\r\n    }\r\n\r\n    public Type getSelectedType() {\r\n        return turn.getSelectedType();\r\n    }\r\n\r\n    /**\r\n     * gibt Aktuell Spielenden Spieler zurück\r\n     *\r\n     * @return aktueller Spieler (String)\r\n     */\r\n    public Player getCurrentPlayer() {\r\n        return currentPlayer;\r\n\r\n    }\r\n\r\n    public void gameOver(Player player){\r\n        Log.info(\"gameover\");\r\n        if(player !=null && player.getId()==(currentPlayer.getId())){\r\n            Log.info(\"gameover\");\r\n            changeState(GameState.GAME_OVER);\r\n        }\r\n    }\r\n\r\n    public boolean checkRoundOver() {\r\n        int count = 0;\r\n        for (Player p : players) {\r\n            if (p.getState().equals(PlayerState.PLAYED)) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count == 3) {\r\n            currentPlayer.getCollectedDeck().addCard(turn.getSelectedCard());\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public List<Player> getAvailablePlayer() {\r\n        List<Player> available = new ArrayList<>();\r\n        for (Player p : players) {\r\n            if (p.getState().equals(PlayerState.READY)) {\r\n                available.add(p);\r\n            }\r\n        }\r\n        return available;\r\n    }\r\n\r\n    public void setCurrentPlayer(Player currentPlayer) {\r\n        this.currentPlayer = currentPlayer;\r\n    }\r\n\r\n    public void resetPlayerStatus() {\r\n        for (Player p : players) {\r\n            p.setState(PlayerState.READY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Spieler wählt einen anderen Spieler aus, dem er eine Karte anzudrehen versucht\r\n     *\r\n     * @param otherPlayer Name des gegnerischen Spielers\r\n     * @param card        Karte, die der Spieler außspielen möchte\r\n     */\r\n    public void playCard(Player otherPlayer, Card card) {\r\n        otherPlayer.getHandDeck().useCard(card);\r\n    }\r\n\r\n\r\n    /**\r\n     * Zeigt alle Karten der Spieler an (Collected Deck)\r\n     */\r\n    public void showCards() {\r\n        //noch zu implementieren\r\n    }\r\n\r\n    /**\r\n     * Karte weitergeben oder behalten\r\n     */\r\n    public void challengeCard(Player otherplayer, String playcard, String guess) {\r\n\r\n        // Checkt die Funktion!\r\n        Log.info(\"\", \"\" + playcard + \" \" + guess);\r\n\r\n    }\r\n\r\n    //Schickt den Spielern eine Nachrichtig, ob sie gewonnen haben oder nicht.\r\n\r\n\r\n    /**\r\n     * Prüft collected Deck ob Gewonnen oder Verloren\r\n     */\r\n    public void checkCollectedDeck() {\r\n        for (int i = 0; i < players.size(); i++) {\r\n            players.get(i).getCollectedDeck().hasLost();\r\n        }\r\n    }\r\n\r\n    public Turn getTurn() {\r\n        return turn;\r\n    }\r\n\r\n    /**\r\n     * Getter + Setter\r\n     */\r\n\r\n\r\n    public List<Player> getPlayers() {\r\n        return players;\r\n    }\r\n\r\n    public void setPlayers(List<Player> players) {\r\n        this.players = players;\r\n    }\r\n\r\n    public List<Player> getOtherPlayers() {\r\n        // this.players.remove(); entferne meinen Name ausder Liste und gibt mir nur die Gegner!\r\n        return players;\r\n    }\r\n\r\n    public Player getPlayerbyName(String name) {\r\n        for (int i = 0; i < this.players.size(); i++) {\r\n            if (players.get(i).getId()==Integer.parseInt(name)) {\r\n                return players.get(i);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void setGameListener(GameListener listener) {\r\n        this.listener = listener;\r\n        changeState(currentState);\r\n    }\r\n\r\n    public void setGameData(GameData gameData) {\r\n        this.gameData = gameData;\r\n    }\r\n\r\n    public void updateGame(GameUpdate gameUpdate) {\r\n        this.players = gameUpdate.getPlayers();\r\n        this.currentPlayer = gameUpdate.getCurrentPlayer();\r\n        this.turn = gameUpdate.getTurn();\r\n        this.currentState =gameUpdate.getState();\r\n    }\r\n\r\n    public GameState getCurrentState() {\r\n        return currentState;\r\n    }\r\n\r\n    public void setCurrentState(GameState currentState) {\r\n        this.currentState = currentState;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/game/Game.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/game/Game.java	(date 1623529225821)
@@ -5,15 +5,20 @@
 import com.example.game.card.Card;
 import com.example.game.card.Type;
 import com.example.game.listener.GameListener;
+import com.example.game.listener.StateListener;
+import com.example.server.network.dto.clienttogameserver.HandOver;
 import com.example.server.network.dto.gameservertoclient.GameUpdate;
 import com.example.game.player.Player;
 import com.example.game.player.PlayerState;
 import com.example.server.network.game.GameData;
 
+import java.lang.management.PlatformLoggingMXBean;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
 
+import javax.swing.plaf.nimbus.State;
+
 public class Game {
     private List<Player> players;
     private Player currentPlayer;
@@ -22,6 +27,7 @@
     private Decision decision;
     private GameData gameData;
     private GameListener listener;
+    private StateListener stateListener;
 
     Card playcard;
 
@@ -43,25 +49,26 @@
         GameUpdate gameUpdate = new GameUpdate(players, currentPlayer, state, turn, decision);
         if(listener!=null)listener.notify(gameUpdate, this.currentState);
         this.currentState = state;
+        if(stateListener!=null)stateListener.stateChanged();
         Log.info("GameState changed to " + state.name() + " and current players name is: " + currentPlayer.getId());
         if(turn != null) Log.info("Current turn contains: Card: "+turn.getSelectedCard().getType()+", Type: "+ turn.getSelectedType()+", enemy: "+turn.getSelectedEnemy().getId());
 
     }
 
     public void makeTurn(Player player, Turn turn) {
-
-
+        if(turn==null||turn.getSelectedCard()==null||turn.getSelectedType()==null||turn.getSelectedEnemy()==null)return;
         if (currentState == GameState.AWAITING_TURN && player.getId()==currentPlayer.getId()) {
             this.turn = turn;
             changeState(GameState.AWAITING_DECISION);
-            //currentPlayer.getHandDeck().removeCard(turn.getSelectedCard());
+
             currentPlayer.setState(PlayerState.PLAYED);
-
         } else  Log.info("not permitted to make a turn player: "+currentPlayer.getId());
     }
 
     public void makeDecision(Player player, Decision decision) {
+        if(decision==null)return;
         if (currentState == GameState.AWAITING_DECISION && player.getId()==(turn.getSelectedEnemy().getId())) {
+            currentPlayer.getHandDeck().removeCard(turn.getSelectedCard());
             this.decision=decision;
             if ((turn.getSelectedCard().getType() != turn.getSelectedType() && decision == Decision.TRUTH) ||
                     (turn.getSelectedCard().getType() == turn.getSelectedType() && decision == Decision.LIE)) {
@@ -70,14 +77,27 @@
             currentPlayer.getCollectedDeck().addCard(turn.getSelectedCard());
             if(currentPlayer.getCollectedDeck().hasLost())changeState(GameState.GAME_OVER);
             else changeState(GameState.AWAITING_TURN);
+            resetPlayerStatus();
         } else  Log.info("not permitted to make a decision player: "+player.getId());
         Log.info("the decision is: "+ decision.name());
+
     }
 
     public void startGame(){
         changeState(GameState.AWAITING_TURN);
     }
 
+    public void handOver(Player player, HandOver handOver){
+        if(currentState!=GameState.AWAITING_DECISION || handOver.getDecision()==null||handOver.getEnemy()==null||handOver.getEnemy().getState()==PlayerState.PLAYED)return;
+        currentPlayer.getHandDeck().removeCard(turn.getSelectedCard());
+        decision=handOver.getDecision();
+        currentPlayer = player;
+        currentPlayer.getHandDeck().addCard(turn.getSelectedCard());
+        currentPlayer.setState(PlayerState.PLAYED);
+        decision=handOver.getDecision();
+        changeState(GameState.AWAITING_DECISION);
+    }
+
     public void reject(Player player) {
         currentPlayer = player;
         currentState = GameState.AWAITING_TURN;
@@ -98,11 +118,10 @@
     }
 
     public void gameOver(Player player){
-        Log.info("gameover");
-        if(player !=null && player.getId()==(currentPlayer.getId())){
-            Log.info("gameover");
-            changeState(GameState.GAME_OVER);
-        }
+        currentPlayer = player;
+        this.currentState = GameState.GAME_OVER;
+        if(stateListener!=null)stateListener.stateChanged();
+
     }
 
     public boolean checkRoundOver() {
@@ -220,16 +239,33 @@
     }
 
     public void updateGame(GameUpdate gameUpdate) {
-        this.players = gameUpdate.getPlayers();
+        updatePlayers(gameUpdate.getPlayers());
         this.currentPlayer = gameUpdate.getCurrentPlayer();
         this.turn = gameUpdate.getTurn();
         this.currentState =gameUpdate.getState();
+        if(stateListener!=null)stateListener.stateChanged();
+    }
+
+    public void updatePlayers(List<Player> players){
+        for(Player player: this.players){
+            for(Player newPlayer: players){
+                if(player.getId()== newPlayer.getId()){
+                    player.setHandDeck(newPlayer.getHandDeck());
+                    player.getHandDeck().countAllCards();
+                    player.setCollectedDeck(newPlayer.getCollectedDeck());
+                }
+            }
+        }
     }
 
     public GameState getCurrentState() {
         return currentState;
     }
 
+    public void setStateListener(StateListener listener){
+        this.stateListener = listener;
+    }
+
     public void setCurrentState(GameState currentState) {
         this.currentState = currentState;
     }
Index: app/src/main/java/com/example/kakerlakenpoker/activities/StartScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/StartScreen.java	(date 1623528549298)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/StartScreen.java	(date 1623528549298)
@@ -0,0 +1,28 @@
+package com.example.kakerlakenpoker.activities;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Handler;
+import android.view.View;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.esotericsoftware.minlog.Log;
+import com.example.kakerlakenpoker.R;
+
+public class StartScreen extends AppCompatActivity {
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.startscreenview);
+
+        Intent intent = new Intent(this, EnterUserNameActivity.class);
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                startActivity(intent);
+            }
+        },4000);
+    }
+}
Index: core/src/main/java/com/example/game/Decision.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.game;\r\n\r\npublic enum Decision {\r\n    TRUTH,\r\n    LIE\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/game/Decision.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/game/Decision.java	(date 1623528549312)
@@ -2,5 +2,5 @@
 
 public enum Decision {
     TRUTH,
-    LIE
+    LIE,
 }
Index: app/src/main/java/com/example/kakerlakenpoker/activities/LobbyAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/LobbyAdapter.java	(date 1623528549287)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/LobbyAdapter.java	(date 1623528549287)
@@ -0,0 +1,13 @@
+package com.example.kakerlakenpoker.activities;
+
+public class LobbyAdapter {
+    private SearchLobbyActivity searchLobbyActivity;
+
+    public LobbyAdapter(SearchLobbyActivity activity){
+        searchLobbyActivity=activity;
+    }
+
+    public void notifyAdapter(){
+        searchLobbyActivity.initRecyclerView();
+    }
+}
Index: core/src/main/java/com/example/game/listener/StateListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/game/listener/StateListener.java	(date 1623528549316)
+++ core/src/main/java/com/example/game/listener/StateListener.java	(date 1623528549316)
@@ -0,0 +1,10 @@
+package com.example.game.listener;
+
+abstract public class StateListener {
+
+    public void stateChanged(){
+        inform();
+    }
+
+    abstract public void inform();
+}
Index: core/src/main/java/com/example/server/NetworkConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.server;\r\n\r\npublic class NetworkConstants {\r\n    public static final int TCP_PORT = 53211;\r\n    public static final String MAIN_SERVER_IP = \"se2-demo.aau.at\";\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/server/NetworkConstants.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/server/NetworkConstants.java	(date 1623528549317)
@@ -2,5 +2,5 @@
 
 public class NetworkConstants {
     public static final int TCP_PORT = 53211;
-    public static final String MAIN_SERVER_IP = "se2-demo.aau.at";
+    public static final String MAIN_SERVER_IP = "se2-demo.aau.at"; //se2-demo.aau.at
 }
\ No newline at end of file
Index: core/src/main/java/com/example/server/ServerListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.server;\r\n\r\nimport com.esotericsoftware.kryonet.Connection;\r\nimport com.esotericsoftware.kryonet.Listener;\r\nimport com.esotericsoftware.minlog.Log;\r\nimport com.example.game.BuildGame;\r\nimport com.example.game.Game;\r\nimport com.example.game.GameConstants;\r\nimport com.example.game.listener.GameListenerServerSide;\r\nimport com.example.game.player.Player;\r\nimport com.example.server.dto.clienttomainserver.ClientJoinedRequest;\r\nimport com.example.server.dto.clienttomainserver.ClientName;\r\nimport com.example.server.dto.clienttomainserver.GameServerReadyToConnect;\r\nimport com.example.server.dto.mainservertoclient.ClientJoinedResponse;\r\nimport com.example.server.dto.mainservertoclient.ClientsToJoinGameServer;\r\nimport com.example.server.dto.mainservertoclient.DestroyLobby;\r\nimport com.example.server.dto.clienttomainserver.ExitLobby;\r\nimport com.example.server.dto.mainservertoclient.ExitLobbyResponse;\r\nimport com.example.server.dto.BaseMessage;\r\nimport com.example.server.dto.Lobby;\r\nimport com.example.server.dto.clienttomainserver.OpenLobby;\r\nimport com.example.server.dto.clienttomainserver.GetOpenLobbies;\r\nimport com.example.server.dto.mainservertoclient.SendOpenLobbies;\r\nimport com.example.server.dto.mainservertoclient.StartUpGameServer;\r\nimport com.example.server.network.dto.PlayerReady;\r\nimport com.example.server.network.dto.clienttogameserver.MakeDecision;\r\nimport com.example.server.network.dto.clienttogameserver.MakeTurn;\r\nimport com.example.server.network.dto.gameservertoclient.GameOver;\r\nimport com.example.server.network.game.GameData;\r\n\r\nimport java.net.InetSocketAddress;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\npublic class ServerListener extends Listener {\r\n    private final MainServer server;\r\n    private HashMap<InetSocketAddress, String> userNames;\r\n    private ArrayList<GameData> gameDatas;\r\n\r\n    public ServerListener(MainServer server){\r\n        this.server = server;\r\n        userNames = new HashMap<>();\r\n        gameDatas = new ArrayList<>();\r\n    }\r\n\r\n    @Override\r\n    public void connected(Connection connection) {\r\n        Log.info(\"Client connected: \"+ connection.getRemoteAddressTCP());\r\n    }\r\n\r\n    @Override\r\n    public void received(Connection connection, Object object) {\r\n        Log.info(\"ReceivedObject \"+ object.getClass());\r\n        if(object instanceof GetOpenLobbies){\r\n            connection.sendTCP(new SendOpenLobbies(server.getAllLobbies()));\r\n        } else if (object instanceof OpenLobby){\r\n            Lobby lobbyToAdd = ((OpenLobby) object).getLobby();\r\n            lobbyToAdd.setHostIP(connection.getRemoteAddressTCP().toString());\r\n            server.addLobby(lobbyToAdd);\r\n        }else if(object instanceof ClientJoinedRequest){\r\n            ClientJoinedResponseHandler(object, connection);\r\n        }else if (object instanceof ExitLobby){\r\n            ExitLobbyHandler(object, connection);\r\n        }else if (object instanceof GameServerReadyToConnect){\r\n            Lobby lobby = findLobbyByHostId(connection.getRemoteAddressTCP().toString());\r\n            sendMessageToAllClientsInLobby(lobby, new ClientsToJoinGameServer(connection.getRemoteAddressTCP().getAddress().toString()));\r\n        } else if (object instanceof ClientName){\r\n            userNames.put(connection.getRemoteAddressTCP(), ((ClientName) object).getClientsName());\r\n        } else if(object instanceof MakeTurn||object instanceof MakeDecision||object instanceof GameOver)  {\r\n\r\n            ///\r\n            GameData gameData = null;\r\n            Player currentPlayer = null;\r\n            for (GameData data : gameDatas) {\r\n                if (data.getUsers().contains(connection.getRemoteAddressTCP())) {\r\n                    gameData = data;\r\n                    for (Player player : gameData.getGame().getPlayers()) {\r\n                        if (player.getId() == connection.getID()) {\r\n                            currentPlayer = player;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (object instanceof MakeTurn) {\r\n                gameData.getGame().makeTurn(currentPlayer, ((MakeTurn) object).getTurn());\r\n            } else if (object instanceof MakeDecision) {\r\n                gameData.getGame().makeDecision(currentPlayer, ((MakeDecision) object).getDecision());\r\n            } else {\r\n                gameData.getGame().gameOver(currentPlayer);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void ExitLobbyHandler(Object object, Connection connection){\r\n        String lobbyToExitName = ((ExitLobby) object).getLobbyToExitName();\r\n        String ipAddress = connection.getRemoteAddressTCP().toString();\r\n\r\n        for(Lobby currentLobby : server.getAllLobbies()){\r\n            if(currentLobby.getName().equals(lobbyToExitName)){\r\n                if(currentLobby.getHostIP().equals(ipAddress)){\r\n                    server.getAllLobbies().remove(currentLobby);\r\n                    sendMessageToAllClientsInLobby(currentLobby, new DestroyLobby());\r\n                }else {\r\n                    sendMessageToAllClientsInLobby(currentLobby, new ExitLobbyResponse(ipAddress));\r\n                    currentLobby.getPlayersIpList().remove(ipAddress);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void ClientJoinedResponseHandler(Object object, Connection connection){\r\n        String lobbyToJoinName = ((ClientJoinedRequest) object).getLobbyName();\r\n        String ipAddress   = connection.getRemoteAddressTCP().toString();\r\n        String userName = userNames.get(connection.getRemoteAddressTCP());\r\n\r\n\r\n        for(Lobby openLobby : server.getAllLobbies()){\r\n            if(openLobby.getName().equals(lobbyToJoinName)){\r\n                openLobby.getPlayersIpList().put(connection.getRemoteAddressTCP().toString(), userName);\r\n                Log.info(openLobby.toString());\r\n                sendMessageToAllClientsInLobby(openLobby, new ClientJoinedResponse(openLobby));\r\n\r\n                if(openLobby.getPlayersIpList().size() == GameConstants.NEEDED_PLAYERS_TO_PLAY){\r\n                    createGameData(openLobby);\r\n                    //sendMessageToHostFromLobby(openLobby, new StartUpGameServer());\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private void createGameData(Lobby lobby){\r\n        GameData gameData;\r\n        ArrayList<Player> players = new ArrayList<>();\r\n        for(Map.Entry<String , String> set: lobby.getPlayersIpList().entrySet()){\r\n            players.add(new Player(server.getConnectionFromIpAddress(set.getKey().toString()).getID(),null, null));\r\n        }\r\n        BuildGame buildGame = new BuildGame();\r\n        buildGame.setPlayers(players);\r\n        gameData = new GameData(buildGame.buildGame());\r\n        gameData.setIpUserMapping(lobby.getPlayersIpList());\r\n        gameData.getGame().setGameListener(new GameListenerServerSide(server,gameData));\r\n        gameData.getGame().startGame();\r\n        gameDatas.add(gameData);\r\n    }\r\n\r\n    private void sendMessageToAllClientsInLobby(Lobby lobby, BaseMessage message){\r\n        for(String address : lobby.getPlayersIpList().keySet()){\r\n            server.getServer().sendToTCP(server.getConnectionFromIpAddress(address.toString()).getID(), message);\r\n        }\r\n    }\r\n\r\n    private void sendMessageToHostFromLobby(Lobby lobby, BaseMessage message){\r\n        Log.info(\"Send Message to Host from Lobby\");\r\n        server.getServer().sendToTCP(server.getConnectionFromIpAddress(lobby.getHostIP()).getID(), message);\r\n    }\r\n\r\n    private Lobby findLobbyByHostId(String ipAddress){\r\n        for(Lobby currentLobby : server.getAllLobbies()){\r\n            if(currentLobby.getHostIP().equals(ipAddress)){\r\n                return currentLobby;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void disconnected(Connection connection) {\r\n        userNames.remove(connection.getRemoteAddressTCP());\r\n        for(Lobby lobby: server.getAllLobbies()){\r\n            if(lobby.getHostIP().equals(connection.getRemoteAddressTCP()))server.getAllLobbies().remove(lobby);\r\n        }\r\n        Log.info(\"Client disconnected: \"+ connection.getRemoteAddressTCP());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/server/ServerListener.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/server/ServerListener.java	(date 1623528549318)
@@ -21,22 +21,21 @@
 import com.example.server.dto.clienttomainserver.OpenLobby;
 import com.example.server.dto.clienttomainserver.GetOpenLobbies;
 import com.example.server.dto.mainservertoclient.SendOpenLobbies;
-import com.example.server.dto.mainservertoclient.StartUpGameServer;
-import com.example.server.network.dto.PlayerReady;
 import com.example.server.network.dto.clienttogameserver.MakeDecision;
 import com.example.server.network.dto.clienttogameserver.MakeTurn;
 import com.example.server.network.dto.gameservertoclient.GameOver;
+import com.example.server.network.dto.gameservertoclient.InitGame;
 import com.example.server.network.game.GameData;
 
-import java.net.InetSocketAddress;
 import java.util.ArrayList;
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
 
 public class ServerListener extends Listener {
     private final MainServer server;
-    private HashMap<InetSocketAddress, String> userNames;
+    private HashMap<Connection, String> userNames;
     private ArrayList<GameData> gameDatas;
 
     public ServerListener(MainServer server){
@@ -57,7 +56,7 @@
             connection.sendTCP(new SendOpenLobbies(server.getAllLobbies()));
         } else if (object instanceof OpenLobby){
             Lobby lobbyToAdd = ((OpenLobby) object).getLobby();
-            lobbyToAdd.setHostIP(connection.getRemoteAddressTCP().toString());
+            lobbyToAdd.setHostId(String.valueOf(connection.getID()));
             server.addLobby(lobbyToAdd);
         }else if(object instanceof ClientJoinedRequest){
             ClientJoinedResponseHandler(object, connection);
@@ -67,14 +66,14 @@
             Lobby lobby = findLobbyByHostId(connection.getRemoteAddressTCP().toString());
             sendMessageToAllClientsInLobby(lobby, new ClientsToJoinGameServer(connection.getRemoteAddressTCP().getAddress().toString()));
         } else if (object instanceof ClientName){
-            userNames.put(connection.getRemoteAddressTCP(), ((ClientName) object).getClientsName());
+            userNames.put(connection, ((ClientName) object).getClientsName());
         } else if(object instanceof MakeTurn||object instanceof MakeDecision||object instanceof GameOver)  {
 
             ///
             GameData gameData = null;
             Player currentPlayer = null;
             for (GameData data : gameDatas) {
-                if (data.getUsers().contains(connection.getRemoteAddressTCP())) {
+                if (data.getUsers().contains(connection.getRemoteAddressTCP().toString())) {
                     gameData = data;
                     for (Player player : gameData.getGame().getPlayers()) {
                         if (player.getId() == connection.getID()) {
@@ -84,6 +83,9 @@
                 }
             }
 
+            if(gameData==null||currentPlayer==null)return;
+
+
             if (object instanceof MakeTurn) {
                 gameData.getGame().makeTurn(currentPlayer, ((MakeTurn) object).getTurn());
             } else if (object instanceof MakeDecision) {
@@ -97,10 +99,11 @@
     private void ExitLobbyHandler(Object object, Connection connection){
         String lobbyToExitName = ((ExitLobby) object).getLobbyToExitName();
         String ipAddress = connection.getRemoteAddressTCP().toString();
+        String id = String.valueOf(connection.getID());
 
         for(Lobby currentLobby : server.getAllLobbies()){
             if(currentLobby.getName().equals(lobbyToExitName)){
-                if(currentLobby.getHostIP().equals(ipAddress)){
+                if(currentLobby.getHostId().equals(id)){
                     server.getAllLobbies().remove(currentLobby);
                     sendMessageToAllClientsInLobby(currentLobby, new DestroyLobby());
                 }else {
@@ -115,7 +118,7 @@
     private void ClientJoinedResponseHandler(Object object, Connection connection){
         String lobbyToJoinName = ((ClientJoinedRequest) object).getLobbyName();
         String ipAddress   = connection.getRemoteAddressTCP().toString();
-        String userName = userNames.get(connection.getRemoteAddressTCP());
+        String userName = userNames.get(connection);
 
 
         for(Lobby openLobby : server.getAllLobbies()){
@@ -137,16 +140,25 @@
     private void createGameData(Lobby lobby){
         GameData gameData;
         ArrayList<Player> players = new ArrayList<>();
+        Set<String> keySet = lobby.getPlayersIpList().keySet();
         for(Map.Entry<String , String> set: lobby.getPlayersIpList().entrySet()){
             players.add(new Player(server.getConnectionFromIpAddress(set.getKey().toString()).getID(),null, null));
         }
         BuildGame buildGame = new BuildGame();
         buildGame.setPlayers(players);
-        gameData = new GameData(buildGame.buildGame());
+        Game game = buildGame.buildGame();
+        gameData = new GameData(game);
+        gameData.getUsers().addAll(keySet);
         gameData.setIpUserMapping(lobby.getPlayersIpList());
+
+
+        gameDatas.add(gameData);
+
+        for(String address : lobby.getPlayersIpList().keySet()){
+            server.getServer().sendToTCP(server.getConnectionFromIpAddress(address).getID(), new InitGame(game));
+        }
         gameData.getGame().setGameListener(new GameListenerServerSide(server,gameData));
         gameData.getGame().startGame();
-        gameDatas.add(gameData);
     }
 
     private void sendMessageToAllClientsInLobby(Lobby lobby, BaseMessage message){
@@ -157,12 +169,12 @@
 
     private void sendMessageToHostFromLobby(Lobby lobby, BaseMessage message){
         Log.info("Send Message to Host from Lobby");
-        server.getServer().sendToTCP(server.getConnectionFromIpAddress(lobby.getHostIP()).getID(), message);
+        server.getServer().sendToTCP(server.getConnectionFromIpAddress(lobby.getHostId()).getID(), message);
     }
 
     private Lobby findLobbyByHostId(String ipAddress){
         for(Lobby currentLobby : server.getAllLobbies()){
-            if(currentLobby.getHostIP().equals(ipAddress)){
+            if(currentLobby.getHostId().equals(ipAddress)){
                 return currentLobby;
             }
         }
@@ -171,10 +183,14 @@
 
     @Override
     public void disconnected(Connection connection) {
-        userNames.remove(connection.getRemoteAddressTCP());
-        for(Lobby lobby: server.getAllLobbies()){
-            if(lobby.getHostIP().equals(connection.getRemoteAddressTCP()))server.getAllLobbies().remove(lobby);
+        Log.info("Client disconnected: "+connection);
+        for (Iterator<Lobby> iterator = server.getAllLobbies().iterator(); iterator.hasNext();) {
+            Lobby lobbyToRemove = iterator.next();
+            if(lobbyToRemove.getHostId().equals(String.valueOf(connection.getID()))) {
+                iterator.remove();
+            }
         }
-        Log.info("Client disconnected: "+ connection.getRemoteAddressTCP());
+
+        userNames.remove(connection);
     }
 }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.kakerlakenpoker\">\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AppCompat.NoActionBar\">\r\n        <activity\r\n            android:name=\".activities.EnterUserNameActivity\"\r\n            android:screenOrientation=\"landscape\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".activities.MultiplayerMainActivity\"\r\n            android:screenOrientation=\"landscape\" />\r\n        <activity\r\n            android:name=\".activities.ShowPlayersInLobbyActivity\"\r\n            android:screenOrientation=\"landscape\" />\r\n        <activity\r\n            android:name=\".activities.SearchLobbyActivity\"\r\n            android:screenOrientation=\"landscape\" />\r\n        <activity\r\n            android:name=\".activities.PlayerIngameMainActivity\"\r\n            android:screenOrientation=\"landscape\" />\r\n        <activity\r\n            android:name=\".activities.MainMenuActivity\"\r\n            android:screenOrientation=\"landscape\" />\r\n        <activity\r\n            android:name=\".activities.CreateLobbyActivity\"\r\n            android:screenOrientation=\"landscape\" />\r\n    </application>\r\n\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/AndroidManifest.xml	(date 1623528549283)
@@ -13,7 +13,7 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.AppCompat.NoActionBar">
         <activity
-            android:name=".activities.EnterUserNameActivity"
+            android:name=".activities.StartScreen"
             android:screenOrientation="landscape">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -21,6 +21,9 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+        <activity
+            android:name=".activities.EnterUserNameActivity"
+            android:screenOrientation="landscape" />
         <activity
             android:name=".activities.MultiplayerMainActivity"
             android:screenOrientation="landscape" />
@@ -28,11 +31,12 @@
             android:name=".activities.ShowPlayersInLobbyActivity"
             android:screenOrientation="landscape" />
         <activity
-            android:name=".activities.SearchLobbyActivity"
+            android:name=".activities.PlayerIngameMainActivity"
             android:screenOrientation="landscape" />
         <activity
-            android:name=".activities.PlayerIngameMainActivity"
+            android:name=".activities.SearchLobbyActivity"
             android:screenOrientation="landscape" />
+
         <activity
             android:name=".activities.MainMenuActivity"
             android:screenOrientation="landscape" />
Index: app/src/main/res/layout-land/player_ingameview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:visibility=\"visible\">\r\n\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewKakerlake\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"KAKERLAKE\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.020\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/kakerlakenkarte2\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewBat\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"FLEDERMAUS\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.160\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/bat\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewFly\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"FLIEGE\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.300\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture3\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/fly\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewFrog\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"FROSCH\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.440\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture4\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/kermit\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewRat\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"RATTE\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.580\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture5\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/ratte\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewScorpion\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"SCORPION\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.720\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture6\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/skorpion\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewSpider\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"SPINNE\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.860\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture7\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/spinne\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/dragViewStink\"\r\n        android:layout_width=\"85dp\"\r\n        android:layout_height=\"146dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        android:tag=\"RATTE\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.998\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.837\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/picture8\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/stinkwanze\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/Player1\"\r\n        android:layout_width=\"690dp\"\r\n        android:layout_height=\"54dp\"\r\n        android:background=\"@color/colorPrimary\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.564\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.054\">\r\n\r\n    </LinearLayout>\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/krotenView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.09\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/kakerlakenView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.193\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/spinnenVIew\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.292\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/stinkwanzeView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.393\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/fliegeView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.511\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/fledermausView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.61\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/rattenView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.71\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/skorpionView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.815\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.283\" />\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/popupview\"\r\n        android:layout_width=\"627dp\"\r\n        android:layout_height=\"284dp\"\r\n        android:background=\"@color/colorOrange\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        tools:visibility=\"invisible\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Möchtest du diese Karte wirklich ausspielen?\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinnerPlayer\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/guessText\"\r\n            android:layout_width=\"332dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"center\"\r\n            android:hint=\"Name der Karte\"\r\n            android:inputType=\"textPersonName\"\r\n            android:visibility=\"visible\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/sendButton\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"10dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Send\"\r\n            android:visibility=\"visible\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/exitButton\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"10dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Back\"\r\n            android:visibility=\"visible\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/notificationView\"\r\n        android:layout_width=\"499dp\"\r\n        android:layout_height=\"224dp\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@color/colorOrange\"\r\n        android:gravity=\"center\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        tools:visibility=\"invisible\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/messageText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"16sp\" />\r\n\r\n\r\n\r\n    </LinearLayout>\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/player_ingameview.xml	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/res/layout-land/player_ingameview.xml	(date 1623528549303)
@@ -2,10 +2,331 @@
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/cheatbox"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     tools:visibility="visible">
 
+    <LinearLayout
+        android:id="@+id/collectedKakerlake"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="22"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.32"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.29000002">
+
+        <TextView
+            android:id="@+id/kakerlakenView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic1"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/kakerlakenkarte2" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/collectedFliege"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="0"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.21"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.29000002">
+
+        <TextView
+            android:id="@+id/fliegeView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic2"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/fly" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/collectedFledermaus"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="-25"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.09"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.29000002">
+
+        <TextView
+            android:id="@+id/fledermausView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic3"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/bat" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/collectedFrosch"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="0"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.46"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.29000002">
+
+        <TextView
+            android:id="@+id/krotenView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic4"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/kermit" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/collectedRatte"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="-12"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.6"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.29000002">
+
+        <TextView
+            android:id="@+id/rattenView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic5"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/ratte" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/collectedScorpion"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="22"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.7"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.29000002">
+
+        <TextView
+            android:id="@+id/skorpionView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic6"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/skorpion" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/collectedSpinne"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="8"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.83"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.29000002">
+
+        <TextView
+            android:id="@+id/spinnenVIew"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic7"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/spinne" />
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/collectedStinkwanze"
+        android:layout_width="70dp"
+        android:layout_height="126dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:rotation="46"
+        android:tag="KAKERLAKE"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.93"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.31">
+
+        <TextView
+            android:id="@+id/stinkwanzeView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="fill_horizontal"
+            android:background="#ffffff"
+            android:gravity="center_horizontal"
+            android:rotation="0"
+            android:text="6"
+            android:textColor="#000"
+            android:textStyle="bold"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.35"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.26" />
+
+        <ImageView
+            android:id="@+id/pic8"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:srcCompat="@drawable/stinkwanze" />
+
+    </LinearLayout>
 
     <LinearLayout
         android:id="@+id/dragViewKakerlake"
@@ -29,6 +350,7 @@
 
     </LinearLayout>
 
+
     <LinearLayout
         android:id="@+id/dragViewBat"
         android:layout_width="85dp"
@@ -196,105 +518,10 @@
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.054">
 
+
     </LinearLayout>
 
 
-    <TextView
-        android:id="@+id/krotenView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.09"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
-    <TextView
-        android:id="@+id/kakerlakenView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.193"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
-    <TextView
-        android:id="@+id/spinnenVIew"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.292"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
-    <TextView
-        android:id="@+id/stinkwanzeView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.393"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
-    <TextView
-        android:id="@+id/fliegeView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.511"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
-    <TextView
-        android:id="@+id/fledermausView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.61"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
-    <TextView
-        android:id="@+id/rattenView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.71"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
-    <TextView
-        android:id="@+id/skorpionView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="TextView"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.815"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.283" />
-
     <LinearLayout
         android:id="@+id/popupview"
         android:layout_width="627dp"
@@ -362,9 +589,9 @@
         android:id="@+id/notificationView"
         android:layout_width="499dp"
         android:layout_height="224dp"
-        android:orientation="vertical"
         android:background="@color/colorOrange"
         android:gravity="center"
+        android:orientation="vertical"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
@@ -383,8 +610,19 @@
             android:textSize="16sp" />
 
 
-
     </LinearLayout>
 
+    <CheckBox
+        android:id="@+id/checkBox"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Cheat"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.05"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.97" />
+
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: core/src/main/java/com/example/game/player/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.game.player;\r\n\r\n/**\r\n * Repräsentiert einen Spieler.\r\n * Diese Klasse verwendet die Klasse HandDeck\r\n */\r\npublic class Player {\r\n    private PlayerState state;\r\n    private int id;\r\n    private String name;\r\n    private HandDeck handDeck;\r\n    private CollectedDeck collectedDeck;\r\n\r\n    /**\r\n     * Konstruktor für Klasse Player\r\n     */\r\n    public Player(){\r\n\r\n    }\r\n\r\n\r\n    public Player(int id, HandDeck handDeck, CollectedDeck collectedDeck) {\r\n        this.state = PlayerState.READY;\r\n        this.id = id;\r\n        this.handDeck = handDeck;\r\n        this.collectedDeck = collectedDeck;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * Setter Methode für Name (falls benötigt)\r\n\r\n     * @param id des Spielers\r\n     */\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    /**\r\n     * Getter Methode für Hand Karten\r\n     * @return HandDeck des Spielers\r\n     */\r\n    public HandDeck getHandDeck() {\r\n        return handDeck;\r\n    }\r\n\r\n    /**\r\n     * Setter Methode für Hand Karten (falls benötigt)\r\n     * @param handDeck für Spieler\r\n     */\r\n    public void setHandDeck(HandDeck handDeck) {\r\n        this.handDeck = handDeck;\r\n    }\r\n\r\n    /**\r\n     * Getter Methode für Gesammelte Karten\r\n     * @return Klasse mit den gesammelten Karten\r\n     */\r\n    public CollectedDeck getCollectedDeck() {\r\n        return collectedDeck;\r\n    }\r\n\r\n    /**\r\n     * Setter methode für Gesammelte Karten\r\n     * @param collectedDeck für Spieler\r\n     */\r\n    public void setCollectedDeck(CollectedDeck collectedDeck) {\r\n        this.collectedDeck = collectedDeck;\r\n    }\r\n\r\n    public PlayerState getState() {\r\n        return state;\r\n    }\r\n\r\n    public void setState(PlayerState state) {\r\n        this.state = state;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/game/player/Player.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/game/player/Player.java	(date 1623529225837)
@@ -7,7 +7,6 @@
 public class Player {
     private PlayerState state;
     private int id;
-    private String name;
     private HandDeck handDeck;
     private CollectedDeck collectedDeck;
 
@@ -17,8 +16,6 @@
     public Player(){
 
     }
-
-
     public Player(int id, HandDeck handDeck, CollectedDeck collectedDeck) {
         this.state = PlayerState.READY;
         this.id = id;
@@ -26,17 +23,16 @@
         this.collectedDeck = collectedDeck;
     }
 
+    /**
+     * Getter Methode für Name
+     * @return name des Spielers
+     */
     public int getId() {
         return id;
     }
 
-    public void setName(String name) {
-        this.name = name;
-    }
-
     /**
      * Setter Methode für Name (falls benötigt)
-
      * @param id des Spielers
      */
     public void setId(int id) {
Index: core/src/main/java/com/example/game/listener/GameListenerServerSide.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.game.listener;\r\n\r\nimport com.example.game.GameState;\r\nimport com.example.game.player.Player;\r\nimport com.example.server.MainServer;\r\nimport com.example.server.dto.BaseMessage;\r\nimport com.example.server.network.dto.gameservertoclient.GameOver;\r\nimport com.example.server.network.dto.gameservertoclient.GameUpdate;\r\nimport com.example.server.network.dto.gameservertoclient.InitGame;\r\nimport com.example.server.network.game.GameData;\r\n\r\nimport java.net.InetSocketAddress;\r\n\r\npublic class GameListenerServerSide implements GameListener {\r\n    private MainServer server;\r\n    private GameData gameData;\r\n\r\n    public GameListenerServerSide(MainServer server, GameData gameData){\r\n        this.server = server;\r\n        this.gameData= gameData;\r\n    }\r\n\r\n    @Override\r\n    public void notify(GameUpdate gameUpdate, GameState previousState){\r\n        if(gameUpdate.getState()==GameState.AWAITING_GO)sendToPlayers((new InitGame(gameUpdate)));\r\n        else if(gameUpdate.getState()==GameState.GAME_OVER)sendToPlayers(new GameOver(gameUpdate.getCurrentPlayer()));\r\n        else sendToPlayers(gameUpdate);\r\n    }\r\n\r\n    public void sendToPlayers(BaseMessage message){\r\n        for(Player player : gameData.getGame().getPlayers()){\r\n            server.getServer().sendToTCP(player.getId(),message);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/game/listener/GameListenerServerSide.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/game/listener/GameListenerServerSide.java	(date 1623528549313)
@@ -15,21 +15,24 @@
     private MainServer server;
     private GameData gameData;
 
-    public GameListenerServerSide(MainServer server, GameData gameData){
+    public GameListenerServerSide(MainServer server, GameData gameData) {
         this.server = server;
-        this.gameData= gameData;
+        this.gameData = gameData;
     }
 
     @Override
-    public void notify(GameUpdate gameUpdate, GameState previousState){
-        if(gameUpdate.getState()==GameState.AWAITING_GO)sendToPlayers((new InitGame(gameUpdate)));
-        else if(gameUpdate.getState()==GameState.GAME_OVER)sendToPlayers(new GameOver(gameUpdate.getCurrentPlayer()));
-        else sendToPlayers(gameUpdate);
+    public void notify(GameUpdate gameUpdate, GameState previousState) {
+        if (gameUpdate.getState() == GameState.AWAITING_GO) {
+        } else if (gameUpdate.getState() == GameState.GAME_OVER) {
+            sendToPlayers(new GameOver(gameData
+                    .getGame().getCurrentPlayer()));
+
+        } else sendToPlayers(gameUpdate);
     }
 
-    public void sendToPlayers(BaseMessage message){
-        for(Player player : gameData.getGame().getPlayers()){
-            server.getServer().sendToTCP(player.getId(),message);
+    public void sendToPlayers(BaseMessage message) {
+        for (Player player : gameData.getGame().getPlayers()) {
+            server.getServer().sendToTCP(player.getId(), message);
         }
     }
 }
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Kakerlakenpoker</string>\r\n    <string name=\"startbutton\">Search Lobby</string>\r\n    <string name=\"quitbutton\">Create Lobby</string>\r\n    <string name=\"startbackground\">StartBackground</string>\r\n    <string name=\"title_activity_show_lobby\">ShowLobbyActivity</string>\r\n    <!-- Strings used for fragments for navigation -->\r\n    <string name=\"first_fragment_label\">First Fragment</string>\r\n    <string name=\"second_fragment_label\">Second Fragment</string>\r\n    <string name=\"next\">Next</string>\r\n    <string name=\"previous\">Previous</string>\r\n\r\n    <string name=\"hello_first_fragment\">Hello first fragment</string>\r\n    <string name=\"hello_second_fragment\">Hello second fragment. Arg: %1$s</string>\r\n    <string name=\"large_text\">\r\n        \"Material is the metaphor.\\n\\n\"\r\n\r\n        \"A material metaphor is the unifying theory of a rationalized space and a system of motion.\"\r\n        \"The material is grounded in tactile reality, inspired by the study of paper and ink, yet \"\r\n        \"technologically advanced and open to imagination and magic.\\n\"\r\n        \"Surfaces and edges of the material provide visual cues that are grounded in reality. The \"\r\n        \"use of familiar tactile attributes helps users quickly understand affordances. Yet the \"\r\n        \"flexibility of the material creates new affordances that supercede those in the physical \"\r\n        \"world, without breaking the rules of physics.\\n\"\r\n        \"The fundamentals of light, surface, and movement are key to conveying how objects move, \"\r\n        \"interact, and exist in space and in relation to each other. Realistic lighting shows \"\r\n        \"seams, divides space, and indicates moving parts.\\n\\n\"\r\n\r\n        \"Bold, graphic, intentional.\\n\\n\"\r\n\r\n        \"The foundational elements of print based design typography, grids, space, scale, color, \"\r\n        \"and use of imagery guide visual treatments. These elements do far more than please the \"\r\n        \"eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge \"\r\n        \"imagery, large scale typography, and intentional white space create a bold and graphic \"\r\n        \"interface that immerse the user in the experience.\\n\"\r\n        \"An emphasis on user actions makes core functionality immediately apparent and provides \"\r\n        \"waypoints for the user.\\n\\n\"\r\n\r\n        \"Motion provides meaning.\\n\\n\"\r\n\r\n        \"Motion respects and reinforces the user as the prime mover. Primary user actions are \"\r\n        \"inflection points that initiate motion, transforming the whole design.\\n\"\r\n        \"All action takes place in a single environment. Objects are presented to the user without \"\r\n        \"breaking the continuity of experience even as they transform and reorganize.\\n\"\r\n        \"Motion is meaningful and appropriate, serving to focus attention and maintain continuity. \"\r\n        \"Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\\n\\n\"\r\n\r\n        \"3D world.\\n\\n\"\r\n\r\n        \"The material environment is a 3D space, which means all objects have x, y, and z \"\r\n        \"dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the \"\r\n        \"positive z-axis extending towards the viewer. Every sheet of material occupies a single \"\r\n        \"position along the z-axis and has a standard 1dp thickness.\\n\"\r\n        \"On the web, the z-axis is used for layering and not for perspective. The 3D world is \"\r\n        \"emulated by manipulating the y-axis.\\n\\n\"\r\n\r\n        \"Light and shadow.\\n\\n\"\r\n\r\n        \"Within the material environment, virtual lights illuminate the scene. Key lights create \"\r\n        \"directional shadows, while ambient light creates soft shadows from all angles.\\n\"\r\n        \"Shadows in the material environment are cast by these two light sources. In Android \"\r\n        \"development, shadows occur when light sources are blocked by sheets of material at \"\r\n        \"various positions along the z-axis. On the web, shadows are depicted by manipulating the \"\r\n        \"y-axis only. The following example shows the card with a height of 6dp.\\n\\n\"\r\n\r\n        \"Resting elevation.\\n\\n\"\r\n\r\n        \"All material objects, regardless of size, have a resting elevation, or default elevation \"\r\n        \"that does not change. If an object changes elevation, it should return to its resting \"\r\n        \"elevation as soon as possible.\\n\\n\"\r\n\r\n        \"Component elevations.\\n\\n\"\r\n\r\n        \"The resting elevation for a component type is consistent across apps (e.g., FAB elevation \"\r\n        \"does not vary from 6dp in one app to 16dp in another app).\\n\"\r\n        \"Components may have different resting elevations across platforms, depending on the depth \"\r\n        \"of the environment (e.g., TV has a greater depth than mobile or desktop).\\n\\n\"\r\n\r\n        \"Responsive elevation and dynamic elevation offsets.\\n\\n\"\r\n\r\n        \"Some component types have responsive elevation, meaning they change elevation in response \"\r\n        \"to user input (e.g., normal, focused, and pressed) or system events. These elevation \"\r\n        \"changes are consistently implemented using dynamic elevation offsets.\\n\"\r\n        \"Dynamic elevation offsets are the goal elevation that a component moves towards, relative \"\r\n        \"to the component’s resting state. They ensure that elevation changes are consistent \"\r\n        \"across actions and component types. For example, all components that lift on press have \"\r\n        \"the same elevation change relative to their resting elevation.\\n\"\r\n        \"Once the input event is completed or cancelled, the component will return to its resting \"\r\n        \"elevation.\\n\\n\"\r\n\r\n        \"Avoiding elevation interference.\\n\\n\"\r\n\r\n        \"Components with responsive elevations may encounter other components as they move between \"\r\n        \"their resting elevations and dynamic elevation offsets. Because material cannot pass \"\r\n        \"through other material, components avoid interfering with one another any number of ways, \"\r\n        \"whether on a per component basis or using the entire app layout.\\n\"\r\n        \"On a component level, components can move or be removed before they cause interference. \"\r\n        \"For example, a floating action button (FAB) can disappear or move off screen before a \"\r\n        \"user picks up a card, or it can move if a snackbar appears.\\n\"\r\n        \"On the layout level, design your app layout to minimize opportunities for interference. \"\r\n        \"For example, position the FAB to one side of stream of a cards so the FAB won’t interfere \"\r\n        \"when a user tries to pick up one of cards.\\n\\n\"\r\n    </string>\r\n    <string name=\"action_settings\">Settings</string>\r\n    <string name=\"title_activity_players_in_lobby\">PlayersInLobbyActivity</string>\r\n    <string name=\"title_activity_show_players_in_lobby\">ScrollingActivity</string>\r\n    <string name=\"karte\">Karte</string>\r\n    <string name=\"karte1\">Karte</string>\r\n    <string name=\"truth\">TRUTH</string>\r\n    <string name=\"lie\">LIE</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/res/values/strings.xml	(date 1623528549306)
@@ -108,4 +108,5 @@
     <string name="karte1">Karte</string>
     <string name="truth">TRUTH</string>
     <string name="lie">LIE</string>
+    <string name="hand_over">Hand Over</string>
 </resources>
\ No newline at end of file
Index: core/src/main/java/com/example/server/dto/Lobby.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.server.dto;\r\n\r\nimport java.net.InetSocketAddress;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\npublic class Lobby extends BaseMessage{\r\n    private String name;\r\n    private String hostIP;\r\n    private HashMap<String, String> playersIp = new HashMap<>();\r\n\r\n    public Lobby(String name){\r\n        this.name = name;\r\n    }\r\n\r\n    public void setHostIP(String hostIP){\r\n        this.hostIP = hostIP;\r\n    }\r\n\r\n\r\n    public Lobby(){}\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public String getHostIP() {\r\n        return hostIP;\r\n    }\r\n\r\n    public HashMap<String, String> getPlayersIpList() {\r\n        return playersIp;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Lobby{\" +\r\n                \"name='\" + name + '\\'' +\r\n                \", HostIP='\" + hostIP + '\\'' +\r\n                \", playersIpList=\" + playersIp +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/server/dto/Lobby.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ core/src/main/java/com/example/server/dto/Lobby.java	(date 1623528549319)
@@ -1,21 +1,18 @@
 package com.example.server.dto;
 
-import java.net.InetSocketAddress;
-import java.util.ArrayList;
 import java.util.HashMap;
-import java.util.List;
 
 public class Lobby extends BaseMessage{
     private String name;
-    private String hostIP;
+    private String hostId;
     private HashMap<String, String> playersIp = new HashMap<>();
 
     public Lobby(String name){
         this.name = name;
     }
 
-    public void setHostIP(String hostIP){
-        this.hostIP = hostIP;
+    public void setHostId(String hostId){
+        this.hostId = hostId;
     }
 
 
@@ -24,8 +21,8 @@
         return name;
     }
 
-    public String getHostIP() {
-        return hostIP;
+    public String getHostId() {
+        return hostId;
     }
 
     public HashMap<String, String> getPlayersIpList() {
@@ -36,7 +33,7 @@
     public String toString() {
         return "Lobby{" +
                 "name='" + name + '\'' +
-                ", HostIP='" + hostIP + '\'' +
+                ", HostIP='" + hostId + '\'' +
                 ", playersIpList=" + playersIp +
                 '}';
     }
Index: app/src/main/res/layout/decision_dialoge.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/decision_dialoge.xml	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/res/layout/decision_dialoge.xml	(date 1623528549304)
@@ -1,6 +1,69 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout
-    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
     android:layout_height="match_parent">
 
+    <TextView
+        android:id="@+id/info"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TextView"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="@id/truth"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <Button
+        android:id="@+id/truth"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/truth"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toTopOf="@id/lie"
+        app:layout_constraintTop_toBottomOf="@id/info" />
+
+    <Button
+        android:id="@+id/lie"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/lie"
+        app:layout_constraintBottom_toTopOf="@+id/handOver"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/truth" />
+
+    <Spinner
+        android:id="@+id/handOver"
+        app:layout_constraintHorizontal_chainStyle="packed"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/handOverButton"
+        app:layout_constraintStart_toEndOf="@id/spinnerType"
+        app:layout_constraintTop_toBottomOf="@id/lie" />
+
+    <Button
+        android:id="@+id/handOverButton"
+        android:layout_width="wrap_content"
+        app:layout_constraintHorizontal_chainStyle="packed"
+        android:layout_height="wrap_content"
+        android:text="@string/hand_over"
+        app:layout_constraintTop_toBottomOf="@id/lie"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@id/handOver"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <Spinner
+        android:id="@+id/spinnerType"
+        app:layout_constraintHorizontal_chainStyle="packed"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/handOver"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/lie" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: core/src/main/java/com/example/server/network/dto/clienttogameserver/HandOver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/example/server/network/dto/clienttogameserver/HandOver.java	(date 1623528549320)
+++ core/src/main/java/com/example/server/network/dto/clienttogameserver/HandOver.java	(date 1623528549320)
@@ -0,0 +1,25 @@
+package com.example.server.network.dto.clienttogameserver;
+
+import com.example.game.Decision;
+import com.example.game.player.Player;
+
+public class HandOver {
+    private Player enemy;
+    private Decision decision;
+    public HandOver(){
+
+    }
+
+    public HandOver(Player enemy, Decision decision){
+        this.enemy = enemy;
+        this.decision = decision;
+    }
+
+    public Decision getDecision() {
+        return decision;
+    }
+
+    public Player getEnemy() {
+        return enemy;
+    }
+}
Index: app/src/main/res/layout-land/decision_dialoge.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/info\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"@id/truth\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/truth\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/truth\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/lie\"\r\n       app:layout_constraintTop_toBottomOf=\"@id/info\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/lie\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/lie\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/truth\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/decision_dialoge.xml	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/res/layout-land/decision_dialoge.xml	(date 1623528549301)
@@ -31,8 +31,39 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="@string/lie"
-        app:layout_constraintTop_toBottomOf="@id/truth"
-        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/handOver"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent" />
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/truth" />
+
+    <Spinner
+        android:id="@+id/handOver"
+        app:layout_constraintHorizontal_chainStyle="packed"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/handOverButton"
+        app:layout_constraintStart_toEndOf="@id/spinnerType"
+        app:layout_constraintTop_toBottomOf="@id/lie" />
+
+    <Button
+        android:id="@+id/handOverButton"
+        android:layout_width="wrap_content"
+        app:layout_constraintHorizontal_chainStyle="packed"
+        android:layout_height="wrap_content"
+        android:text="@string/hand_over"
+        app:layout_constraintTop_toBottomOf="@id/lie"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@id/handOver"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <Spinner
+        android:id="@+id/spinnerType"
+        app:layout_constraintHorizontal_chainStyle="packed"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/handOver"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/lie" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/kakerlakenpoker/activities/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\nimport com.example.game.card.Card;\r\nimport com.example.game.card.Type;\r\nimport com.example.game.BuildGame;\r\nimport com.example.game.Decision;\r\nimport com.example.game.Game;\r\nimport com.example.game.Turn;\r\nimport com.example.game.player.CollectedDeck;\r\nimport com.example.game.player.HandDeck;\r\nimport com.example.game.player.Player;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Test {\r\n    public static void main(String[] args) {\r\n        Player player1 = new Player(1, new HandDeck(), new CollectedDeck());\r\n        Player player2 = new Player(2, new HandDeck(), new CollectedDeck());\r\n        Player player3 = new Player(3, new HandDeck(), new CollectedDeck());\r\n        Player player4 = new Player(4, new HandDeck(), new CollectedDeck());\r\n        ArrayList<Player> player = new ArrayList<>();\r\n        player.add(player1);\r\n        player.add(player2);\r\n        player.add(player3);\r\n        player.add(player4);\r\n        boolean next = true;\r\n        int round = 1;\r\n        boolean displ = true;\r\n        Card currCard;\r\n        String card = \"x\";\r\n        String enemy;\r\n        String say;\r\n        String decission;\r\n        List<Player> possible;\r\n        Scanner scanner = new Scanner(System.in);\r\n        BuildGame buildGame = new BuildGame();\r\n        buildGame.setPlayers(player);\r\n        Game game = buildGame.buildGame();\r\n        game.setCurrentPlayer(game.getPlayerbyName(\"player1\"));\r\n        System.out.println(\"Game build success!\");\r\n\r\n            while (next) {\r\n                next = false;\r\n                if(game.getCurrentPlayer().getCollectedDeck().hasLost()){\r\n<<<<<<< HEAD\r\n                    System.out.println(\"Player \" + game.getCurrentPlayer().getID() +\" lost the game!\");\r\n=======\r\n                    System.out.println(\"Player \" + game.getCurrentPlayer().getId() +\" lost the game!\");\r\n>>>>>>> reorderingFiles\r\n                    System.out.println(game.getCurrentPlayer().getCollectedDeck().showAllCards().toString());\r\n                    break;\r\n                }\r\n                System.out.println(\"####ROUND \" + round + \"#####\");\r\n                game.resetPlayerStatus();\r\n                int local = round;\r\n<<<<<<< HEAD\r\n                System.out.println(\"Turn of player: \" + game.getCurrentPlayer().getID());\r\n=======\r\n                System.out.println(\"Turn of player: \" + game.getCurrentPlayer().getId());\r\n>>>>>>> reorderingFiles\r\n                while (displ) {\r\n                    System.out.println(\"Your Handcards are: \" + game.getCurrentPlayer().getHandDeck().showAllCards().toString());\r\n                    System.out.println(\"Choose a Card to play or enter display to see the collected Cards of your enemys: \");\r\n                    card = scanner.nextLine();\r\n                    if (card.equals(\"display\")) {\r\n                        for (Player p : player) {\r\n                            System.out.println(\"---------------------------------\");\r\n<<<<<<< HEAD\r\n                            System.out.println(\"Collectded Deck of player: \" + p.getID());\r\n=======\r\n                            System.out.println(\"Collectded Deck of player: \" + p.getId());\r\n>>>>>>> reorderingFiles\r\n                            System.out.println(p.getCollectedDeck().showAllCards().toString());\r\n                            System.out.println();\r\n                        }\r\n                    } else {\r\n                        displ = false;\r\n                    }\r\n                }\r\n                displ = true;\r\n                currCard = game.getCurrentPlayer().getHandDeck().findCard(card);\r\n                game.getCurrentPlayer().getHandDeck().removeCard(currCard);\r\n                System.out.println(\"You choose: \" + currCard.getType().toString());\r\n                while (local == round) {\r\n<<<<<<< HEAD\r\n                    System.out.println(\"Current Player: \" + game.getCurrentPlayer().getID());\r\n=======\r\n                    System.out.println(\"Current Player: \" + game.getCurrentPlayer().getId());\r\n>>>>>>> reorderingFiles\r\n                    System.out.println();\r\n                    System.out.println(\"Possible Enemys: \" );\r\n                    possible = game.getAvailablePlayer();\r\n                    for (Player p: possible) {\r\n<<<<<<< HEAD\r\n                        if(!p.getID().equals(game.getCurrentPlayer().getID())){\r\n                        System.out.println(\"Player: \" + p.getID());\r\n=======\r\n                        if(p.getId()!=(game.getCurrentPlayer().getId())){\r\n                        System.out.println(\"Player: \" + p.getId());\r\n>>>>>>> reorderingFiles\r\n                        }\r\n                    }\r\n                    System.out.println();\r\n                    System.out.println(\"Choose an Enemy: \");\r\n                    enemy = scanner.nextLine();\r\n                    System.out.println(\"You choose: \" + enemy);\r\n                    System.out.println(\"What do you say to your enemy? \");\r\n                    say = scanner.nextLine();\r\n                    game.makeTurn(game.getCurrentPlayer(), new Turn(currCard, Type.valueOf(say), game.getPlayerbyName(enemy)));\r\n<<<<<<< HEAD\r\n                    System.out.println(enemy + \": \"  + game.getCurrentPlayer().getID() + \" played \" + say + \"!\");\r\n=======\r\n                    System.out.println(enemy + \": \"  + game.getCurrentPlayer().getId() + \" played \" + say + \"!\");\r\n>>>>>>> reorderingFiles\r\n                    System.out.println(\"Enter decision or reject!\");\r\n                    decission = scanner.nextLine();\r\n\r\n                    if (decission.equals(\"decision\")) {\r\n                        System.out.println(\"Enter TRUTH or LIE\");\r\n<<<<<<< HEAD\r\n                        String printer = game.getCurrentPlayer().getID();\r\n=======\r\n                        int printer = game.getCurrentPlayer().getId();\r\n>>>>>>> reorderingFiles\r\n                        decission = scanner.nextLine();\r\n                        game.makeDecision(game.getPlayerbyName(enemy), Decision.valueOf(decission));\r\n                        System.out.println(\"---------CHALLENGE---------\");\r\n                        System.out.println(printer + \" played \" + card + \" and said \" + say);\r\n                        System.out.println(enemy + \" said \" + decission);\r\n<<<<<<< HEAD\r\n                        System.out.println(\"New curr Player: = \" + game.getCurrentPlayer().getID());\r\n                        next = true;\r\n                        round++;\r\n                    } else if (decission.equals(\"reject\")) {\r\n                        System.out.println(\"Player \" + game.getCurrentPlayer().getID() + \" played: \" + card);\r\n=======\r\n                        System.out.println(\"New curr Player: = \" + game.getCurrentPlayer().getId());\r\n                        next = true;\r\n                        round++;\r\n                    } else if (decission.equals(\"reject\")) {\r\n                        System.out.println(\"Player \" + game.getCurrentPlayer().getId() + \" played: \" + card);\r\n>>>>>>> reorderingFiles\r\n                        game.reject(game.getPlayerbyName(enemy));\r\n                        System.out.println();\r\n                    }\r\n                    if (game.checkRoundOver()) {\r\n                        next = true;\r\n                        round++;\r\n                    }\r\n                }\r\n\r\n                System.out.println();\r\n\r\n            }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/Test.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/Test.java	(date 1623529225821)
@@ -15,6 +15,7 @@
 import java.util.Scanner;
 
 public class Test {
+    /*
     public static void main(String[] args) {
         Player player1 = new Player(1, new HandDeck(), new CollectedDeck());
         Player player2 = new Player(2, new HandDeck(), new CollectedDeck());
@@ -45,10 +46,10 @@
                 next = false;
                 if(game.getCurrentPlayer().getCollectedDeck().hasLost()){
 <<<<<<< HEAD
+                    System.out.println("Player " + game.getCurrentPlayer().getId() +" lost the game!");
+=======
                     System.out.println("Player " + game.getCurrentPlayer().getID() +" lost the game!");
-=======
-                    System.out.println("Player " + game.getCurrentPlayer().getId() +" lost the game!");
->>>>>>> reorderingFiles
+>>>>>>> origin/develop
                     System.out.println(game.getCurrentPlayer().getCollectedDeck().showAllCards().toString());
                     break;
                 }
@@ -56,10 +57,10 @@
                 game.resetPlayerStatus();
                 int local = round;
 <<<<<<< HEAD
-                System.out.println("Turn of player: " + game.getCurrentPlayer().getID());
+                System.out.println("Turn of player: " + game.getCurrentPlayer().getId());
 =======
-                System.out.println("Turn of player: " + game.getCurrentPlayer().getId());
->>>>>>> reorderingFiles
+                System.out.println("Turn of player: " + game.getCurrentPlayer().getID());
+>>>>>>> origin/develop
                 while (displ) {
                     System.out.println("Your Handcards are: " + game.getCurrentPlayer().getHandDeck().showAllCards().toString());
                     System.out.println("Choose a Card to play or enter display to see the collected Cards of your enemys: ");
@@ -68,10 +69,10 @@
                         for (Player p : player) {
                             System.out.println("---------------------------------");
 <<<<<<< HEAD
+                            System.out.println("Collectded Deck of player: " + p.getId());
+=======
                             System.out.println("Collectded Deck of player: " + p.getID());
-=======
-                            System.out.println("Collectded Deck of player: " + p.getId());
->>>>>>> reorderingFiles
+>>>>>>> origin/develop
                             System.out.println(p.getCollectedDeck().showAllCards().toString());
                             System.out.println();
                         }
@@ -85,21 +86,21 @@
                 System.out.println("You choose: " + currCard.getType().toString());
                 while (local == round) {
 <<<<<<< HEAD
-                    System.out.println("Current Player: " + game.getCurrentPlayer().getID());
+                    System.out.println("Current Player: " + game.getCurrentPlayer().getId());
 =======
-                    System.out.println("Current Player: " + game.getCurrentPlayer().getId());
->>>>>>> reorderingFiles
+                    System.out.println("Current Player: " + game.getCurrentPlayer().getID());
+>>>>>>> origin/develop
                     System.out.println();
                     System.out.println("Possible Enemys: " );
                     possible = game.getAvailablePlayer();
                     for (Player p: possible) {
 <<<<<<< HEAD
-                        if(!p.getID().equals(game.getCurrentPlayer().getID())){
-                        System.out.println("Player: " + p.getID());
-=======
                         if(p.getId()!=(game.getCurrentPlayer().getId())){
                         System.out.println("Player: " + p.getId());
->>>>>>> reorderingFiles
+=======
+                        if(!p.getID().equals(game.getCurrentPlayer().getID())){
+                        System.out.println("Player: " + p.getID());
+>>>>>>> origin/develop
                         }
                     }
                     System.out.println();
@@ -110,38 +111,38 @@
                     say = scanner.nextLine();
                     game.makeTurn(game.getCurrentPlayer(), new Turn(currCard, Type.valueOf(say), game.getPlayerbyName(enemy)));
 <<<<<<< HEAD
-                    System.out.println(enemy + ": "  + game.getCurrentPlayer().getID() + " played " + say + "!");
-=======
                     System.out.println(enemy + ": "  + game.getCurrentPlayer().getId() + " played " + say + "!");
->>>>>>> reorderingFiles
+=======
+                    System.out.println(enemy + ": "  + game.getCurrentPlayer().getID() + " played " + say + "!");
+>>>>>>> origin/develop
                     System.out.println("Enter decision or reject!");
                     decission = scanner.nextLine();
 
                     if (decission.equals("decision")) {
                         System.out.println("Enter TRUTH or LIE");
 <<<<<<< HEAD
-                        String printer = game.getCurrentPlayer().getID();
+                        int printer = game.getCurrentPlayer().getId();
 =======
-                        int printer = game.getCurrentPlayer().getId();
->>>>>>> reorderingFiles
+                        String printer = game.getCurrentPlayer().getID();
+>>>>>>> origin/develop
                         decission = scanner.nextLine();
                         game.makeDecision(game.getPlayerbyName(enemy), Decision.valueOf(decission));
                         System.out.println("---------CHALLENGE---------");
                         System.out.println(printer + " played " + card + " and said " + say);
                         System.out.println(enemy + " said " + decission);
 <<<<<<< HEAD
-                        System.out.println("New curr Player: = " + game.getCurrentPlayer().getID());
+                        System.out.println("New curr Player: = " + game.getCurrentPlayer().getId());
                         next = true;
                         round++;
                     } else if (decission.equals("reject")) {
-                        System.out.println("Player " + game.getCurrentPlayer().getID() + " played: " + card);
+                        System.out.println("Player " + game.getCurrentPlayer().getId() + " played: " + card);
 =======
-                        System.out.println("New curr Player: = " + game.getCurrentPlayer().getId());
+                        System.out.println("New curr Player: = " + game.getCurrentPlayer().getID());
                         next = true;
                         round++;
                     } else if (decission.equals("reject")) {
-                        System.out.println("Player " + game.getCurrentPlayer().getId() + " played: " + card);
->>>>>>> reorderingFiles
+                        System.out.println("Player " + game.getCurrentPlayer().getID() + " played: " + card);
+>>>>>>> origin/develop
                         game.reject(game.getPlayerbyName(enemy));
                         System.out.println();
                     }
@@ -155,5 +156,6 @@
 
             }
     }
+    */
 }
 
Index: .github/workflows/github-actions-demo.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .github/workflows/github-actions-demo.yml	(date 1623528549281)
+++ .github/workflows/github-actions-demo.yml	(date 1623528549281)
@@ -0,0 +1,17 @@
+name: GitHub Actions Demo
+on: [push]
+jobs:
+  Explore-GitHub-Actions:
+    runs-on: ubuntu-latest
+    steps:
+      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
+      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
+      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
+      - name: Check out repository code
+        uses: actions/checkout@v2
+      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
+      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
+      - name: List files in the repository
+        run: |
+          ls ${{ github.workspace }}
+      - run: echo "🍏 This job's status is ${{ job.status }}."
\ No newline at end of file
Index: app/src/main/java/com/example/kakerlakenpoker/activities/GameListenerClientSide.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kakerlakenpoker.activities;\r\n\r\nimport com.example.game.GameState;\r\nimport com.example.game.listener.GameListener;\r\nimport com.example.server.network.dto.gameservertoclient.GameOver;\r\nimport com.example.server.network.dto.gameservertoclient.GameUpdate;\r\nimport com.example.server.network.dto.clienttogameserver.MakeDecision;\r\nimport com.example.server.network.dto.clienttogameserver.MakeTurn;\r\n\r\n\r\npublic class GameListenerClientSide implements GameListener {\r\n    private GameClient gameClient;\r\n\r\n    public GameListenerClientSide(GameClient client){\r\n        gameClient = client;\r\n    }\r\n    @Override\r\n    public void notify(GameUpdate gameUpdate, GameState previousState) {\r\n        if(previousState==GameState.AWAITING_TURN && gameUpdate.getState()==GameState.AWAITING_DECISION)\r\n        gameClient.getClient().sendMessage(new MakeTurn(gameUpdate.getTurn()));\r\n        else if(previousState==GameState.AWAITING_DECISION && gameUpdate.getState()==GameState.AWAITING_TURN)\r\n            gameClient.getClient().sendMessage(new MakeDecision(gameUpdate.getDecision()));\r\n        else if(gameUpdate.getState() ==GameState.GAME_OVER)gameClient.getClient().sendMessage(new GameOver());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/kakerlakenpoker/activities/GameListenerClientSide.java	(revision 4c95f02c0f317c55af62ebb2230dc5850e9dd0e3)
+++ app/src/main/java/com/example/kakerlakenpoker/activities/GameListenerClientSide.java	(date 1623528549285)
@@ -20,6 +20,6 @@
         gameClient.getClient().sendMessage(new MakeTurn(gameUpdate.getTurn()));
         else if(previousState==GameState.AWAITING_DECISION && gameUpdate.getState()==GameState.AWAITING_TURN)
             gameClient.getClient().sendMessage(new MakeDecision(gameUpdate.getDecision()));
-        else if(gameUpdate.getState() ==GameState.GAME_OVER)gameClient.getClient().sendMessage(new GameOver());
+        else if(gameUpdate.getState() ==GameState.GAME_OVER)gameClient.getClient().sendMessage(new MakeDecision(gameUpdate.getDecision()));
     }
 }
diff --git app/src/main/res/layout/testclientserver.xml app/src/main/res/layout/game_over_dialoge.xml
rename from app/src/main/res/layout/testclientserver.xml
rename to app/src/main/res/layout/game_over_dialoge.xml
